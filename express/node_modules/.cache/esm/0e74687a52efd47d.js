let Employee,Admin,getTokens,SECRETKEY,verify;_52e‍.x([["default",()=>_52e‍.o]]);_52e‍.w("../models/Employee",[["default",["Employee"],function(v){Employee=v}]]);_52e‍.w("../models/Admin",[["default",["Admin"],function(v){Admin=v}]]);_52e‍.w("../functions/index",[["getTokens",["getTokens"],function(v){getTokens=v}]]);_52e‍.w("../config/index",[["SECRETKEY",["SECRETKEY"],function(v){SECRETKEY=v}]]);_52e‍.w("jsonwebtoken",[["verify",["verify"],function(v){verify=v}]]);





const authMiddleWare = async (req, res, next) => {
  // Extract Authorization Header

  const token = req.headers.authorization;
  if (!token) {
    req.isAuth = false;
    return next();
  }
  try {
    const tokenValue = token.split(" ")[1]; //ok
    // console.log(tokenValue);
    const { id } = verify(tokenValue, SECRETKEY);
    // console.log(id);
    const user = await Employee.findById(id);
    if (!user) {
      const admin = await Admin.findById(id);
      if (!admin) {
        req.isAuth = false;
        return next();
      }
      req.isAuth = true;
      console.log("admin");
      req.admin = admin.id;
      return next();
    }

    req.user = user.id;
    req.isAuth = true;
    return next();
  } catch (error) {
    req.isAuth = false;
    return next();
  }

  // no cookies
};
_52e‍.d(authMiddleWare);
