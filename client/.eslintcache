[{"D:\\Đồ án chuyên nghành\\client\\src\\index.jsx":"1","D:\\Đồ án chuyên nghành\\client\\src\\reportWebVitals.js":"2","D:\\Đồ án chuyên nghành\\client\\src\\App.jsx":"3","D:\\Đồ án chuyên nghành\\client\\src\\pages\\register.jsx":"4","D:\\Đồ án chuyên nghành\\client\\src\\pages\\login.jsx":"5","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard.jsx":"6","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\main.jsx":"7","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\index.jsx":"8","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\SideBar.jsx":"9","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\infoSideBar.jsx":"10","D:\\Đồ án chuyên nghành\\client\\src\\components\\login\\index.jsx":"11","D:\\Đồ án chuyên nghành\\client\\src\\components\\text\\index.jsx":"12","D:\\Đồ án chuyên nghành\\client\\src\\components\\buttons\\index.jsx":"13","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Request.jsx":"14","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Home.jsx":"15","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Employee.jsx":"16","D:\\Đồ án chuyên nghành\\client\\src\\components\\sidebar.jsx":"17","D:\\Đồ án chuyên nghành\\client\\src\\states\\navbarState.jsx":"18","D:\\Đồ án chuyên nghành\\client\\src\\components\\cards\\AvatarCard.jsx":"19","D:\\Đồ án chuyên nghành\\client\\src\\components\\cards\\CommonCard.jsx":"20","D:\\Đồ án chuyên nghành\\client\\src\\pages\\test.jsx":"21","D:\\Đồ án chuyên nghành\\client\\src\\components\\routes\\PrivateRoute.jsx":"22","D:\\Đồ án chuyên nghành\\client\\src\\components\\functions\\isAuth.jsx":"23","D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\authVar.jsx":"24","D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\userVar.jsx":"25","D:\\Đồ án chuyên nghành\\client\\src\\graphql\\mutation\\index.js":"26","D:\\Đồ án chuyên nghành\\client\\src\\graphql\\query\\index.js":"27","D:\\Đồ án chuyên nghành\\client\\src\\states\\adminState.jsx":"28","D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\uiVar.jsx":"29","D:\\Đồ án chuyên nghành\\client\\src\\components\\dropDownMenu.jsx":"30","D:\\Đồ án chuyên nghành\\client\\src\\components\\DropdownMenu.jsx":"31","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Shift.jsx":"32"},{"size":1773,"mtime":1608377868107,"results":"33","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"34"},{"size":1465,"mtime":1608272732161,"results":"36","hashOfConfig":"34"},{"size":157,"mtime":1606408565872,"results":"37","hashOfConfig":"34"},{"size":4721,"mtime":1608299557633,"results":"38","hashOfConfig":"34"},{"size":2291,"mtime":1608965230600,"results":"39","hashOfConfig":"34"},{"size":231,"mtime":1607876749537,"results":"40","hashOfConfig":"34"},{"size":3369,"mtime":1608964436676,"results":"41","hashOfConfig":"34"},{"size":2597,"mtime":1608274348149,"results":"42","hashOfConfig":"34"},{"size":1370,"mtime":1608292649873,"results":"43","hashOfConfig":"34"},{"size":1105,"mtime":1607500251942,"results":"44","hashOfConfig":"34"},{"size":1017,"mtime":1607665342767,"results":"45","hashOfConfig":"34"},{"size":1716,"mtime":1608379348036,"results":"46","hashOfConfig":"34"},{"size":154,"mtime":1607432732833,"results":"47","hashOfConfig":"34"},{"size":1965,"mtime":1607678545940,"results":"48","hashOfConfig":"34"},{"size":15800,"mtime":1608393823986,"results":"49","hashOfConfig":"34"},{"size":1055,"mtime":1607683584826,"results":"50","hashOfConfig":"34"},{"size":3928,"mtime":1608965055452,"results":"51","hashOfConfig":"34"},{"size":2503,"mtime":1607863549333,"results":"52","hashOfConfig":"34"},{"size":439,"mtime":1607678335830,"results":"53","hashOfConfig":"34"},{"size":259,"mtime":1607913356764,"results":"54","hashOfConfig":"34"},{"size":532,"mtime":1608271556766,"results":"55","hashOfConfig":"34"},{"size":664,"mtime":1608196624252,"results":"56","hashOfConfig":"34"},{"size":79,"mtime":1608265860629,"results":"57","hashOfConfig":"34"},{"size":132,"mtime":1608272842675,"results":"58","hashOfConfig":"34"},{"size":1517,"mtime":1608383894378,"results":"59","hashOfConfig":"34"},{"size":430,"mtime":1608392034107,"results":"60","hashOfConfig":"34"},{"size":569,"mtime":1608282792944,"results":"61","hashOfConfig":"34"},{"size":178,"mtime":1608964302199,"results":"62","hashOfConfig":"34"},{"size":733,"mtime":1608954820334,"results":"63","hashOfConfig":"34"},{"size":1564,"mtime":1608959445199,"results":"64","hashOfConfig":"34"},{"size":1443,"mtime":1608970371944,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"69"},"ol8kls",{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"69"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"69"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"69"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"69"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"111"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"69"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"69"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Đồ án chuyên nghành\\client\\src\\index.jsx",["140"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport Cookies from 'js-cookie'\nimport {CookieProvider} from 'react-cookie'\n//\nimport { RecoilRoot } from 'recoil'\n\n//aphollo client\nimport { setContext } from \"apollo-link-context\";\nimport {createHttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { \n  ApolloClient, \n  InMemoryCache,\n  ApolloLink,\n  ApolloProvider\n} from '@apollo/client';\n\n\n//links\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message))\n})\n\nconst authLink =  setContext((_, { headers }) => {\n  const token =  Cookies.get('accessToken');\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${token}`\n    }\n  }\n})\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache(),\n  credentials : 'include',\n  request : async operation => {\n    operation.setContext({\n      fetchOptions: {\n        credentials: 'same-origin'\n      }\n    })\n  }\n});\n\nconst client = new ApolloClient({\n  link : ApolloLink.from([errorLink, authLink, httpLink]),\n  cache: new InMemoryCache()\n});\n///\n\nReactDOM.render(\n  <ApolloProvider client = {client}>\n    <React.StrictMode>\n        <RecoilRoot>\n          <App />\n          </RecoilRoot>\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["141","142"],"D:\\Đồ án chuyên nghành\\client\\src\\reportWebVitals.js",[],"D:\\Đồ án chuyên nghành\\client\\src\\App.jsx",["143","144","145"],"import React, {useEffect} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { ToastContainer} from 'react-toastify';\nimport { useRecoilState } from 'recoil'\nimport 'react-toastify/dist/ReactToastify.css';\nimport Cookies from 'js-cookie'\n//pages\nimport Login from './pages/login'\nimport Register from './pages/register'\nimport Dashboard from './pages/dashboard'\n\nimport { useReactiveVar } from '@apollo/client';\nimport {auth} from './graphql/var/authVar'\n\nimport {PrivateRoute} from './components/routes/PrivateRoute'\n\nexport default function App() {\n  const isAuth = useReactiveVar(auth)\n  return (\n    <Router>\n      <div>\n        <ToastContainer \n            position = \"top-right\"\n            hideProgressBar = {true}\n            closeOnClick = {true}\n            pauseOnHover = {true}\n            draggable = {true}\n            autoClose = {3000}\n            />\n        <Switch>\n          <Route  path=\"/register\" component={Register}/>\n          <Route  path=\"/login\" component={Login}/>\n          <Route \n              exact\n              path=\"/\"\n              component={() => <Redirect to=\"/dashboard\" />}\n          />\n          <PrivateRoute\n            path=\"/dashboard\"\n            isAuth = {isAuth}\n            component={Dashboard}\n          />\n          <Route path=\"*\" >\n            <h1>404 - Page not found</h1>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","D:\\Đồ án chuyên nghành\\client\\src\\pages\\register.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\login.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard.jsx",["146","147"],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\main.jsx",["148"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport const MainStyled = styled.div`\r\n    height: 630px;\r\n    overflow-x: hidden;\r\n    padding: 10px;\r\n\r\n    &:hover{\r\n        overflow-x : scroll;\r\n    }\r\n`\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\index.jsx",["149"],"D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\SideBar.jsx",["150","151","152"],"import { useReactiveVar } from '@apollo/client';\r\nimport {\r\n    Link,\r\n    useHistory\r\n} from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport { useRecoilState, useRecoilValue} from 'recoil'\r\nimport {itemSideBar, clickSideBar, itemSideBarEmployee} from '../../states/navbarState'\r\n\r\n//\r\nimport {auth} from '../../graphql/var/authVar'\r\nimport {user} from '../../graphql/var/userVar'\r\n\r\n//cpn\r\nimport {SideBarStyled,SideBarItem} from '../sidebar'\r\n//icons\r\nimport { FiLogOut } from \"react-icons/fi\";\r\n \r\n\r\nexport default function SideBar() {\r\n    //state\r\n    const history = useHistory();\r\n    const [currentStateBar , setCurrentStateBar] = useRecoilState(clickSideBar)\r\n    const currentUser = useReactiveVar(user)\r\n    const sideBarState = useRecoilValue(itemSideBar)\r\n    const sideBarEmployeeState = useRecoilValue(itemSideBarEmployee)\r\n\r\n    const handleClick = (name) => {\r\n        let newVal = {\r\n            ...currentStateBar,\r\n            sideBar : name\r\n        }\r\n        setCurrentStateBar(newVal)\r\n    }\r\n\r\n    const logout = () => {\r\n        auth(false)\r\n        Cookies.remove('accessToken');\r\n        history.push('/');\r\n      };\r\n   \r\n    return (\r\n        <div className=\"\">\r\n            <SideBarStyled>\r\n                <div className=\"top_side_bar\">\r\n                    {\r\n                        currentUser.position == 'Admin' ? \r\n                        sideBarState.map((item)  =>\r\n                        <SideBarItem \r\n                            active={item.name == currentStateBar.sideBar ? true : false}\r\n                            onClick={()=>handleClick(item.name)} \r\n                            ><Link to ={item.href}>\r\n                                {item.icon}</Link>\r\n                        </SideBarItem>\r\n                        ):\r\n                        sideBarEmployeeState.map((item)  =>\r\n                        <SideBarItem \r\n                            active={item.name == currentStateBar.sideBar ? true : false}\r\n                            onClick={()=>handleClick(item.name)} \r\n                            ><Link to ={item.href}>\r\n                                {item.icon}</Link>\r\n                        </SideBarItem>\r\n                        )\r\n\r\n                        \r\n                    }\r\n                </div>\r\n                <div className=\"bot\" style={{width : \"90%\"}}>\r\n                    <SideBarItem onClick={() => logout()}>\r\n                        <FiLogOut size=\"20px\" color = \"#F8f8f8\"/>\r\n                    </SideBarItem>\r\n                </div>\r\n            </SideBarStyled>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\infoSideBar.jsx",["153"],"import React, {useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport {useRecoilState} from 'recoil'\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\n\r\nimport {itemsInfoSideBar} from '../../states/navbarState'\r\nimport {SideBarStyled} from '../sidebar'\r\nimport { TextBlackUnderline} from '../text/index'\r\n\r\n\r\nexport  function InfoSideBar() {\r\n    const [components] = useRecoilState(itemsInfoSideBar)\r\n    const [value, onChange] = useState(new Date());\r\n\r\n    return (\r\n        <div>\r\n            <InfoBarStyled>\r\n                <ItemInfoBarStyled>\r\n                <TextBlackUnderline fontSize=\"16px\">Calendar</TextBlackUnderline>\r\n                    <Calendar\r\n                        className=\"custom-calendar\"\r\n                        onChange={onChange}\r\n                        value={value}\r\n                    />\r\n                </ItemInfoBarStyled>       \r\n            </InfoBarStyled>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst InfoBarStyled = styled(SideBarStyled)`\r\n    width : 337px;\r\n    overflow : hidden;\r\n\r\n    &:hover{\r\n        overflow-y : scroll;\r\n        overflow-x : hidden;\r\n    }\r\n\r\n`\r\nconst ItemInfoBarStyled = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-items : center;\r\n    margin : 10px 0;\r\n`\r\n//height : 595px\r\n//width : 225px \r\n// margin-left : 1128px2\r\n\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\login\\index.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\text\\index.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\buttons\\index.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Request.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Home.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Employee.jsx",["154","155"],"import React, {useEffect, useState} from 'react'\r\nimport Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\nimport Select from 'react-select'\r\nimport styled from 'styled-components'\r\n\r\nimport { useQuery , useMutation, useLazyQuery } from '@apollo/client';\r\nimport { useForm , Controller } from \"react-hook-form\";\r\n\r\nimport {\r\n    FormLogin,\r\n    ContainerMiddle,\r\n    TitleH1,\r\n    InputItems,\r\n    CustomInput\r\n} from '../../components/login/index'\r\nimport { \r\n    TextBlack,\r\n    TextLight,\r\n    TextError\r\n } from \"../../components/text\";\r\n import { \r\n    PrimaryButton\r\n } from \"../../components/buttons/index\";\r\nimport { Table } from 'reactstrap';\r\nimport ReactLoading from 'react-loading';\r\nimport { toast } from 'react-toastify';\r\nimport {IconContext } from 'react-icons'\r\nimport {AiOutlineReload} from 'react-icons/ai'\r\nimport {BsPlus} from 'react-icons/bs'\r\nimport {FiEdit} from 'react-icons/fi'\r\nimport {IoRemoveCircleOutline} from 'react-icons/io5'\r\nimport {CommonCard} from '../../components/cards/CommonCard'\r\nimport {CommonButtonBlack} from '../../components/buttons/index'\r\n\r\n//gql\r\nimport {\r\n    GET_ALL_EMPLOYEES,\r\n    GET_EMPLOYEE_BY_ID,\r\n} from '../../graphql/query/index'\r\nimport {\r\n    CREATE_NEW_EMPLOYEE,\r\n    DELETE_EMPLOYEE_BY_ID,\r\n    EDIT_EMPLOYEE_BY_ID,\r\n} from '../../graphql/mutation/index'\r\n\r\nexport default function Employee() {\r\n    const [onAdd , setOnAdd] = useState(false)\r\n    const [onEdit , setOnEdit] = useState(false)\r\n    const [currentEmp, setCurrentEmp] = useState({\r\n        id : '',\r\n        username : '',\r\n        name : '',\r\n        phone : '',\r\n        email : '',\r\n        address : '',\r\n        position : {value : '' , label : ''},\r\n    })\r\n\r\n\r\n    const { register, handleSubmit, errors , control} = useForm();\r\n    const { register : registerEdit, handleSubmit : handleSubmitEdit, errors : errorsEdit , control : controlEdit} = useForm();\r\n\r\n\r\n    const { loading, error, data ,refetch } = useQuery(GET_ALL_EMPLOYEES);\r\n    const [getEmployeeById,{ loading : queryEditEmployeeId, data : dataEmployeeId }] = useLazyQuery(GET_EMPLOYEE_BY_ID,{\r\n        onCompleted: dataEmployeeId => {\r\n            setCurrentEmp({...dataEmployeeId.getEmployeeById, \r\n                position : { value : dataEmployeeId.getEmployeeById.position, label : dataEmployeeId.getEmployeeById.position}\r\n            });\r\n            \r\n            \r\n        }\r\n    });\r\n\r\n\r\n    const [createNewEmployee,{ loading: mutationLoading, error: mutationError }] = useMutation(CREATE_NEW_EMPLOYEE,{\r\n        credentials: 'include',\r\n        refetchQueries :[\r\n            {query :GET_ALL_EMPLOYEES }\r\n        ]\r\n      });\r\n    const [deleteEmployee, {  error : mutationDeleteError }] = useMutation(DELETE_EMPLOYEE_BY_ID,{\r\n        credentials: 'include',\r\n        refetchQueries :[\r\n            {query :GET_ALL_EMPLOYEES }\r\n        ]\r\n      });\r\n    const [editEmployeeByID,{ loading: mutationEditLoading, error: mutationEditError }] = useMutation(EDIT_EMPLOYEE_BY_ID,{\r\n    credentials: 'include',\r\n        refetchQueries :[\r\n            {query : GET_ALL_EMPLOYEES }\r\n        ]\r\n    });\r\n\r\n    const opionsPos = [\r\n        {value : 'Bartender', label : 'Bartender'},\r\n        {value : 'Cashier', label : 'Cashier'},\r\n        {value : 'Dishwasher', label : 'Dishwasher'}\r\n    ]\r\n    if (error || mutationError || mutationDeleteError || mutationEditError){\r\n        toast(`⛔ ${error}`);\r\n        toast(`⛔ ${mutationError}`);\r\n        toast(`⛔ ${mutationDeleteError}`);\r\n        toast(`⛔ ${mutationEditError}`);\r\n    }\r\n\r\n    const onSubmit = async (newEmp) => {\r\n        try{    \r\n            const {data} = await createNewEmployee({\r\n                variables : {\r\n                    username : newEmp.username,\r\n                    password : newEmp.password,\r\n                    email : newEmp.email,\r\n                    name : newEmp.name,\r\n                    phone : newEmp.phone,\r\n                    position : newEmp.position.value,\r\n                    address : newEmp.address\r\n                }\r\n            })\r\n            if(data){\r\n                refetch();\r\n                setOnAdd(false);\r\n                toast('✅ Create successfull !')\r\n            }\r\n        }catch(err){\r\n            toast(`⛔ ${err.message}`);\r\n        }\r\n    }\r\n\r\n    const onSubmitEdit = async (data) => {\r\n        try {\r\n            const rs = await editEmployeeByID({\r\n                variables : {\r\n                    id : currentEmp.id,\r\n                    username : data.username,\r\n                    name : data.name,\r\n                    phone : data.phone,\r\n                    email : data.email,\r\n                    address : data.address,\r\n                    position : data.position.value\r\n                }\r\n            })\r\n            if(rs.data){\r\n                refetch();\r\n                toast('✅ Update successfuly')\r\n                setOnEdit(false)\r\n            }\r\n            console.log(data)\r\n        } catch (error) {\r\n            toast(`⛔ ${error}`)\r\n        }\r\n        \r\n    }\r\n\r\n    const handleDelete = async (idEmployee) => {\r\n        try {\r\n            const {data} = await deleteEmployee({\r\n                variables : {\r\n                    id : idEmployee\r\n                }\r\n            })\r\n            if(data.deleteEmployee.success === true){\r\n                //success\r\n                refetch();\r\n                toast('✅ Successfully deleted')\r\n            }\r\n        } catch (error) {\r\n            toast(`⛔ ${error}`)\r\n        }\r\n    }\r\n\r\n    const handleEdit = async (idEmployee) => {\r\n        getEmployeeById(\r\n            {\r\n                variables : { id : idEmployee},\r\n            } \r\n        )\r\n        console.log(currentEmp)\r\n        setOnEdit(true);\r\n    }\r\n\r\n    return (\r\n        <div style={{overflowX : \"scroll\" , padding : \"10px\"}}>\r\n            <CommonCard width={\"100%\"}>\r\n            {loading ? <ReactLoading type={\"bars\"} color={\"#242424\"} height={50} width={50} /> : \r\n                <>\r\n                <div className=\"btn_list_between\">\r\n                    <CommonButtonBlack\r\n                        width=\"100px\"\r\n                        height =\"40px\"\r\n                        onClick={() => setOnAdd(!onAdd)}\r\n                    >\r\n                        <BsPlus size=\"24\" color=\"#f8f8f8\"/>\r\n                        Add\r\n                    </CommonButtonBlack>\r\n                    <CommonButtonBlack\r\n                        width=\"40px\"\r\n                        height =\"40px\"\r\n                        borderRadius=\"50%\"\r\n                        onClick={() => refetch()}\r\n                    >\r\n                        <AiOutlineReload size=\"24\" color=\"#f8f8f8\"/>\r\n                    </CommonButtonBlack>\r\n                </div>\r\n                <Table hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Position</th>\r\n                        <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {\r\n                        data.getAllEmployees.map((i ,index) => \r\n                        <tbody>\r\n                            <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{i.name}</td>\r\n                            <td>{i.email}</td>\r\n                            <td>{i.position}</td>\r\n                            <td>\r\n                                <IconContext.Provider value={  { style : { \r\n                                    padding : '5px',\r\n                                    borderRadius : '50%',\r\n                                    background : \"#f8f8f8\",\r\n                                    marginLeft : '5px',\r\n                                    cursor : 'pointer',\r\n                                    fontSize : '30px',\r\n                                }}}>\r\n                                    <FiEdit onClick={() => handleEdit(i.id)}/>\r\n                                    <IoRemoveCircleOutline \r\n                                        style={{color : \"#ffff\", backgroundColor : \"#ff657c\"}} \r\n                                        onClick={() => handleDelete(i.id)} \r\n                                    />\r\n                                </IconContext.Provider>\r\n                            </td>\r\n                            </tr>\r\n                        </tbody>\r\n                        )\r\n                    }\r\n                </Table>\r\n                </>\r\n            }\r\n            \r\n            </CommonCard>\r\n            <Rodal visible={onAdd} onClose={() => setOnAdd(false)} showCloseButton={true}>\r\n                <FormMaxWidthHeight onSubmit={handleSubmit(onSubmit)} >\r\n                {mutationLoading ? <ReactLoading type={\"bars\"} color={\"#242424\"} height={50} width={50} /> :\r\n                    <ContainerMiddle style={{overflow : \"scroll\"}}>\r\n                    <TitleH1 >New Employee </TitleH1>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Username</TextBlack>\r\n                        <CustomInput  name=\"username\" height = \"40px\" placeholder=\"Username ...\" ref={register({ required: true })} />\r\n                        {errors.username && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Password</TextBlack>\r\n                        <CustomInput  name=\"password\" type=\"password\"  height = \"40px\" placeholder=\"Password ...\" ref={register({ required: true })} />\r\n                        {errors.password && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Full Name</TextBlack>\r\n                        <CustomInput  name=\"name\" height = \"40px\" placeholder=\"Full name ...\" ref={register({ required: true })} />\r\n                        {errors.name && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Phone</TextBlack>\r\n                        <CustomInput  name=\"phone\"   height = \"40px\" placeholder=\"Phone ...\" ref={register}/>\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Email</TextBlack>\r\n                        <CustomInput  name=\"email\" type=\"email\"  height = \"40px\" placeholder=\"Email ...\" ref={register({ required: true })} />\r\n                        {errors.email && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Address</TextBlack>\r\n                        <CustomInput  name=\"address\" height = \"40px\" placeholder=\"Address ...\" ref={register}/>\r\n                    </InputItems>\r\n                    <section>\r\n                        <TextBlack style={{margin : \"10px 0\"}} fontWeight =\"500\" fontSize = \"16px\">Position</TextBlack>\r\n                        <Controller\r\n                            as={Select}\r\n                            options={opionsPos}\r\n                            name=\"position\"\r\n                            isClearable\r\n                            control={control}\r\n                            defaultValue ={opionsPos[0]}\r\n                        />\r\n                    </section>\r\n                    <InputItems>\r\n                        <PrimaryButton type=\"submit\"> \r\n                            <TextLight fontWeight = \"500\" fontSize=\"14px\">Create</TextLight> \r\n                        </PrimaryButton>\r\n                    </InputItems>\r\n                </ContainerMiddle>\r\n                } \r\n                </FormMaxWidthHeight>\r\n            </Rodal>\r\n            <Rodal visible={onEdit} onClose={() => setOnEdit(false)} showCloseButton={true}>\r\n                <FormMaxWidthHeight onSubmit={handleSubmitEdit(onSubmitEdit)} >\r\n                {(queryEditEmployeeId || mutationEditLoading) ? <ReactLoading type={\"bars\"} color={\"#242424\"} height={50} width={50} /> :\r\n                    <ContainerMiddle style={{overflow : \"scroll\"}}>\r\n                    <TitleH1 >Edit Employee </TitleH1>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Username</TextBlack>\r\n                        <CustomInput value={currentEmp.username} onChange={(e)=> setCurrentEmp({ ...currentEmp ,username : e.target.value})} name=\"username\" height = \"40px\" placeholder=\"Username ...\" ref={registerEdit({ required: true })} />\r\n                        {errorsEdit.username && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Full Name</TextBlack>\r\n                        <CustomInput value={currentEmp.name}  onChange={(e)=> setCurrentEmp({ ...currentEmp ,name : e.target.value})} name=\"name\" height = \"40px\" placeholder=\"Full name ...\" ref={registerEdit({ required: true })} />\r\n                        {errorsEdit.name && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Phone</TextBlack>\r\n                        <CustomInput value={currentEmp.phone}  onChange={(e)=> setCurrentEmp({ ...currentEmp ,phone : e.target.value})} name=\"phone\"   height = \"40px\" placeholder=\"Phone ...\" ref={registerEdit}/>\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Email</TextBlack>\r\n                        <CustomInput value={currentEmp.email}  onChange={(e)=> setCurrentEmp({ ...currentEmp ,email : e.target.value})} name=\"email\" type=\"email\"  height = \"40px\" placeholder=\"Email ...\" ref={registerEdit({ required: true })} />\r\n                        {errorsEdit.email && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Address</TextBlack>\r\n                        <CustomInput value={currentEmp.address}  onChange={(e)=> setCurrentEmp({ ...currentEmp ,address : e.target.value})} name=\"address\" height = \"40px\" placeholder=\"Address ...\" ref={registerEdit}/>\r\n                    </InputItems>\r\n                    <section>\r\n                        <TextBlack style={{margin : \"10px 0\"}} fontWeight =\"500\" fontSize = \"16px\">Position</TextBlack>\r\n                        <Controller\r\n                            as={Select}\r\n                            options={opionsPos}\r\n                            name=\"position\"\r\n                            isClearable\r\n                            control={controlEdit}\r\n                            defaultValue={currentEmp.position}\r\n                        />\r\n                    </section>\r\n                    <InputItems>\r\n                        <PrimaryButton type=\"submit\"> \r\n                            <TextLight fontWeight = \"500\" fontSize=\"14px\">Save</TextLight> \r\n                        </PrimaryButton>\r\n                    </InputItems>\r\n                </ContainerMiddle>\r\n                } \r\n                </FormMaxWidthHeight>\r\n            </Rodal>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst FormMaxWidthHeight = styled(FormLogin)`\r\n    width : 100%;\r\n    height : 100%;\r\n    overflow-x : scroll;\r\n`\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\sidebar.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\states\\navbarState.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\cards\\AvatarCard.jsx",[],["156","157"],"D:\\Đồ án chuyên nghành\\client\\src\\components\\cards\\CommonCard.jsx",["158"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const CommonCard = styled.div`\r\n    width : ${props => props.width ? props.width : \"90%\"};\r\n    height : ${props => props.height ? props.height : \"350px\"};\r\n    display : inline-table;\r\n    padding : 30px 40px;\r\n    background : #ffff;\r\n    border-radius : 20px;\r\n    margin : 1rem 0;\r\n    &:hover{\r\n        box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.1);\r\n    }\r\n`","D:\\Đồ án chuyên nghành\\client\\src\\pages\\test.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\routes\\PrivateRoute.jsx",["159"],"import React from 'react'\r\nimport {Route , Redirect} from 'react-router-dom'\r\nimport {auth} from '../../graphql/var/authVar'\r\n// import * as isAuth from '../functions/isAuth' //return boolean\r\n\r\nexport function PrivateRoute({ component: Component,isAuth, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          isAuth === true ? (\r\n            <Component />\r\n          ) : (\r\n            <Redirect\r\n              to= \"/login\"\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\functions\\isAuth.jsx",["160","161"],"D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\authVar.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\userVar.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\graphql\\mutation\\index.js",[],"D:\\Đồ án chuyên nghành\\client\\src\\graphql\\query\\index.js",[],"D:\\Đồ án chuyên nghành\\client\\src\\states\\adminState.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\uiVar.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\dropDownMenu.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\DropdownMenu.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Shift.jsx",["162","163","164"],{"ruleId":"165","severity":1,"message":"166","line":8,"column":9,"nodeType":"167","messageId":"168","endLine":8,"endColumn":23},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"165","severity":1,"message":"173","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"174","line":9,"column":10,"nodeType":"167","messageId":"168","endLine":9,"endColumn":24},{"ruleId":"165","severity":1,"message":"175","line":11,"column":8,"nodeType":"167","messageId":"168","endLine":11,"endColumn":15},{"ruleId":"165","severity":1,"message":"176","line":32,"column":12,"nodeType":"167","messageId":"168","endLine":32,"endColumn":16},{"ruleId":"177","severity":1,"message":"178","line":40,"column":8,"nodeType":"179","endLine":40,"endColumn":10,"suggestions":"180"},{"ruleId":"165","severity":1,"message":"181","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"182","severity":1,"message":"183","line":43,"column":37,"nodeType":"184","messageId":"185","endLine":43,"endColumn":39},{"ruleId":"182","severity":1,"message":"186","line":47,"column":46,"nodeType":"184","messageId":"185","endLine":47,"endColumn":48},{"ruleId":"182","severity":1,"message":"186","line":50,"column":47,"nodeType":"184","messageId":"185","endLine":50,"endColumn":49},{"ruleId":"182","severity":1,"message":"186","line":58,"column":47,"nodeType":"184","messageId":"185","endLine":58,"endColumn":49},{"ruleId":"165","severity":1,"message":"187","line":15,"column":12,"nodeType":"167","messageId":"168","endLine":15,"endColumn":22},{"ruleId":"165","severity":1,"message":"173","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"188","line":66,"column":68,"nodeType":"167","messageId":"168","endLine":66,"endColumn":82},{"ruleId":"169","replacedBy":"189"},{"ruleId":"171","replacedBy":"190"},{"ruleId":"165","severity":1,"message":"181","line":1,"column":8,"nodeType":"167","messageId":"168","endLine":1,"endColumn":13},{"ruleId":"165","severity":1,"message":"191","line":3,"column":9,"nodeType":"167","messageId":"168","endLine":3,"endColumn":13},{"ruleId":"165","severity":1,"message":"192","line":1,"column":10,"nodeType":"167","messageId":"168","endLine":1,"endColumn":21},{"ruleId":"165","severity":1,"message":"193","line":1,"column":23,"nodeType":"167","messageId":"168","endLine":1,"endColumn":32},{"ruleId":"165","severity":1,"message":"173","line":1,"column":16,"nodeType":"167","messageId":"168","endLine":1,"endColumn":25},{"ruleId":"165","severity":1,"message":"194","line":1,"column":27,"nodeType":"167","messageId":"168","endLine":1,"endColumn":35},{"ruleId":"165","severity":1,"message":"195","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":13},"no-unused-vars","'CookieProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["196"],"no-negated-in-lhs",["197"],"'useEffect' is defined but never used.","'useRecoilState' is defined but never used.","'Cookies' is defined but never used.","'auth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuth'. Either include it or remove the dependency array.","ArrayExpression",["198"],"'React' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'components' is assigned a value but never used.","'dataEmployeeId' is assigned a value but never used.",["196"],["197"],"'auth' is defined but never used.","'decodeToken' is defined but never used.","'isExpired' is defined but never used.","'useState' is defined but never used.","'Rodal' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},"Update the dependencies array to be: [setAuth]",{"range":"201","text":"202"},[1153,1155],"[setAuth]"]