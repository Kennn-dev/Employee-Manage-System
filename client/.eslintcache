[{"D:\\Đồ án chuyên nghành\\client\\src\\index.jsx":"1","D:\\Đồ án chuyên nghành\\client\\src\\reportWebVitals.js":"2","D:\\Đồ án chuyên nghành\\client\\src\\App.jsx":"3","D:\\Đồ án chuyên nghành\\client\\src\\pages\\register.jsx":"4","D:\\Đồ án chuyên nghành\\client\\src\\pages\\login.jsx":"5","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard.jsx":"6","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\main.jsx":"7","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\index.jsx":"8","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\SideBar.jsx":"9","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\infoSideBar.jsx":"10","D:\\Đồ án chuyên nghành\\client\\src\\components\\login\\index.jsx":"11","D:\\Đồ án chuyên nghành\\client\\src\\components\\text\\index.jsx":"12","D:\\Đồ án chuyên nghành\\client\\src\\components\\buttons\\index.jsx":"13","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Request.jsx":"14","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Home.jsx":"15","D:\\Đồ án chuyên nghành\\client\\src\\components\\sidebar.jsx":"16","D:\\Đồ án chuyên nghành\\client\\src\\states\\navbarState.jsx":"17","D:\\Đồ án chuyên nghành\\client\\src\\components\\cards\\AvatarCard.jsx":"18","D:\\Đồ án chuyên nghành\\client\\src\\components\\cards\\CommonCard.jsx":"19","D:\\Đồ án chuyên nghành\\client\\src\\pages\\test.jsx":"20","D:\\Đồ án chuyên nghành\\client\\src\\components\\routes\\PrivateRoute.jsx":"21","D:\\Đồ án chuyên nghành\\client\\src\\components\\functions\\isAuth.jsx":"22","D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\authVar.jsx":"23","D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\userVar.jsx":"24","D:\\Đồ án chuyên nghành\\client\\src\\graphql\\mutation\\index.js":"25","D:\\Đồ án chuyên nghành\\client\\src\\graphql\\query\\index.js":"26","D:\\Đồ án chuyên nghành\\client\\src\\states\\adminState.jsx":"27","D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\uiVar.jsx":"28","D:\\Đồ án chuyên nghành\\client\\src\\components\\dropDownMenu.jsx":"29","D:\\Đồ án chuyên nghành\\client\\src\\components\\DropdownMenu.jsx":"30","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Shift\\Shift.jsx":"31","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Employee\\Employee.jsx":"32","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Employee\\List.jsx":"33","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Employee\\Leave.jsx":"34","D:\\Đồ án chuyên nghành\\client\\src\\components\\functions\\parseToDate.js":"35","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\Holiday.jsx":"36","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Salary\\Salary.jsx":"37","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Shift\\SignUpShift.jsx":"38","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Shift\\ManageShift.jsx":"39"},{"size":1773,"mtime":1609158985535,"results":"40","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"41"},{"size":1473,"mtime":1609158916203,"results":"43","hashOfConfig":"41"},{"size":157,"mtime":1606408565872,"results":"44","hashOfConfig":"41"},{"size":4569,"mtime":1609773213241,"results":"45","hashOfConfig":"41"},{"size":2432,"mtime":1610262714859,"results":"46","hashOfConfig":"41"},{"size":231,"mtime":1609573083960,"results":"47","hashOfConfig":"41"},{"size":3369,"mtime":1608964436676,"results":"48","hashOfConfig":"41"},{"size":2597,"mtime":1608274348149,"results":"49","hashOfConfig":"41"},{"size":1589,"mtime":1609574769063,"results":"50","hashOfConfig":"41"},{"size":1105,"mtime":1607500251942,"results":"51","hashOfConfig":"41"},{"size":1017,"mtime":1607665342767,"results":"52","hashOfConfig":"41"},{"size":1716,"mtime":1608379348036,"results":"53","hashOfConfig":"41"},{"size":154,"mtime":1607432732833,"results":"54","hashOfConfig":"41"},{"size":1965,"mtime":1607678545940,"results":"55","hashOfConfig":"41"},{"size":1061,"mtime":1609572966428,"results":"56","hashOfConfig":"41"},{"size":3183,"mtime":1611370711584,"results":"57","hashOfConfig":"41"},{"size":2503,"mtime":1607863549333,"results":"58","hashOfConfig":"41"},{"size":439,"mtime":1607678335830,"results":"59","hashOfConfig":"41"},{"size":259,"mtime":1607913356764,"results":"60","hashOfConfig":"41"},{"size":532,"mtime":1608271556766,"results":"61","hashOfConfig":"41"},{"size":664,"mtime":1608196624252,"results":"62","hashOfConfig":"41"},{"size":79,"mtime":1608265860629,"results":"63","hashOfConfig":"41"},{"size":132,"mtime":1608272842675,"results":"64","hashOfConfig":"41"},{"size":3416,"mtime":1611375806690,"results":"65","hashOfConfig":"41"},{"size":1847,"mtime":1611377016046,"results":"66","hashOfConfig":"41"},{"size":569,"mtime":1608282792944,"results":"67","hashOfConfig":"41"},{"size":178,"mtime":1608964302199,"results":"68","hashOfConfig":"41"},{"size":733,"mtime":1608954820334,"results":"69","hashOfConfig":"41"},{"size":1644,"mtime":1609575050496,"results":"70","hashOfConfig":"41"},{"size":12369,"mtime":1611377559233,"results":"71","hashOfConfig":"41"},{"size":16966,"mtime":1610200658031,"results":"72","hashOfConfig":"41"},{"size":3637,"mtime":1610260223091,"results":"73","hashOfConfig":"41"},{"size":11423,"mtime":1610194821229,"results":"74","hashOfConfig":"41"},{"size":146,"mtime":1609414390343,"results":"75","hashOfConfig":"41"},{"size":8407,"mtime":1611330762672,"results":"76","hashOfConfig":"41"},{"size":4501,"mtime":1611314160022,"results":"77","hashOfConfig":"41"},{"size":3804,"mtime":1611368801618,"results":"78","hashOfConfig":"41"},{"size":2433,"mtime":1611371961312,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"83"},"ol8kls",{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"83"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"83"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"83"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"83"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"83"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"83"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"83"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"83"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"83"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"83"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"83"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":30,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Đồ án chuyên nghành\\client\\src\\index.jsx",["174"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport Cookies from 'js-cookie'\nimport {CookieProvider} from 'react-cookie'\n//\nimport { RecoilRoot } from 'recoil'\n\n//aphollo client\nimport { setContext } from \"apollo-link-context\";\nimport {createHttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { \n  ApolloClient, \n  InMemoryCache,\n  ApolloLink,\n  ApolloProvider\n} from '@apollo/client';\n\n\n//links\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message))\n})\n\nconst authLink =  setContext((_, { headers }) => {\n  const token =  Cookies.get('accessToken');\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${token}`\n    }\n  }\n})\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache(),\n  credentials : 'include',\n  request : async operation => {\n    operation.setContext({\n      fetchOptions: {\n        credentials: 'same-origin'\n      }\n    })\n  }\n});\n\nconst client = new ApolloClient({\n  link : ApolloLink.from([errorLink, authLink, httpLink]),\n  cache: new InMemoryCache()\n});\n///\n\nReactDOM.render(\n  <ApolloProvider client = {client}>\n    <React.StrictMode>\n        <RecoilRoot>\n          <App />\n          </RecoilRoot>\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["175","176"],"D:\\Đồ án chuyên nghành\\client\\src\\reportWebVitals.js",[],"D:\\Đồ án chuyên nghành\\client\\src\\App.jsx",["177","178","179"],"import React, {useEffect} from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\";\nimport { ToastContainer} from 'react-toastify';\nimport { useRecoilState } from 'recoil'\nimport 'react-toastify/dist/ReactToastify.css';\nimport Cookies from 'js-cookie'\n//pages\nimport Login from './pages/login'\nimport Register from './pages/register'\nimport Dashboard from './pages/dashboard'\n\nimport { useReactiveVar } from '@apollo/client';\nimport {auth} from './graphql/var/authVar'\n\nimport {PrivateRoute} from './components/routes/PrivateRoute'\n\n\nexport default function App() {\n  const isAuth = useReactiveVar(auth)\n  return (\n    <Router>\n      \n      <div>\n        <ToastContainer \n            position = \"top-right\"\n            hideProgressBar = {true}\n            closeOnClick = {true}\n            pauseOnHover = {true}\n            draggable = {true}\n            autoClose = {3000}\n            />\n        <Switch>\n          <Route  path=\"/register\" component={Register}/>\n          <Route  path=\"/login\" component={Login}/>\n          <Route \n              exact\n              path=\"/\"\n              component={() => <Redirect to=\"/dashboard\" />}\n          />\n          <PrivateRoute\n            path=\"/dashboard\"\n            isAuth = {isAuth}\n            component={Dashboard}\n          />\n          <Route path=\"*\" >\n            <h1>404 - Page not found</h1>\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n","D:\\Đồ án chuyên nghành\\client\\src\\pages\\register.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\login.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard.jsx",["180","181"],"import React,{useEffect} from 'react'\r\nimport { Row , Col } from 'reactstrap'\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport Cookies from 'js-cookie'\r\nimport {useRecoilState} from 'recoil'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport '../custom.css'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n  } from \"react-router-dom\";\r\n//state\r\nimport {hideInfoBar} from '../graphql/var/uiVar'\r\nimport {loginState} from '../states/adminState'\r\n\r\n//components\r\nimport Employee from './dashboard/Employee/Employee'\r\nimport Request from './dashboard/Request'\r\nimport Home from './dashboard/Home'\r\nimport Shift from './dashboard/Shift/Shift'\r\nimport Salary from './dashboard/Salary/Salary'\r\n\r\nimport {NavBar} from '../components/nav/index'\r\nimport SideBar from '../components/nav/SideBar'\r\n\r\nimport {MainStyled} from './dashboard/main'\r\nimport {InfoSideBar} from '../components/nav/infoSideBar'\r\n\r\n\r\nexport default function Dashboard() {\r\n    const showInfoBar = useReactiveVar(hideInfoBar)\r\n    const [auth , setAuth] = useRecoilState(loginState)\r\n\r\n    useEffect(() => {\r\n    const token = Cookies.get('accessToken');\r\n    if(token){ \r\n        setAuth(true)\r\n    }\r\n    \r\n    }, [])\r\n    return (\r\n        <Router>\r\n        <div className=\"dashboard\">\r\n            <NavBar />\r\n            <Row style= {{\r\n                marginTop : \"90px\",\r\n                boxSizing : \"border-box\",\r\n                height : \"100%\",\r\n                width : \"100%\"\r\n                }}>\r\n                <Col lg=\"1\">\r\n                    <SideBar />\r\n                </Col>\r\n                <Col lg={showInfoBar ? \"11\" : \"8\"}\r\n                    className=\"main-tab\"\r\n                >   \r\n                <MainStyled> \r\n                    <Switch>\r\n                        <Route exact path='/dashboard' component = {Home}/>\r\n                        <Route  path=\"/dashboard/employee\" component={Employee}/>\r\n                        <Route  path=\"/dashboard/shift\" component={Shift}/>\r\n                        <Route path=\"/dashboard/salary\" component={Salary}/>\r\n                        <Route  path=\"/dashboard/request\" component={Request}/>\r\n                    </Switch>\r\n                </MainStyled>\r\n                </Col>\r\n                <Col lg={showInfoBar ? \"0\" : \"3\"}>\r\n                    <InfoSideBar/>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n        </Router>\r\n    )\r\n}\r\n","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\main.jsx",["182"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nexport const MainStyled = styled.div`\r\n    height: 700px;\r\n    overflow-x: hidden;\r\n    padding: 10px;\r\n\r\n    &:hover{\r\n        overflow-x : scroll;\r\n    }\r\n`\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\index.jsx",["183"],"import {Row , Col} from 'reactstrap';\r\nimport styled from 'styled-components';\r\nimport { useReactiveVar } from '@apollo/client';\r\nimport {useRecoilState} from 'recoil'\r\nimport {FiSearch} from 'react-icons/fi'\r\nimport {MdExpandMore} from 'react-icons/md'\r\nimport {HiMenuAlt3} from 'react-icons/hi'\r\n\r\nimport DropdownMenu from '../DropdownMenu'\r\nimport {AvatarRectangleCard} from '../cards/AvatarCard'\r\nimport {TextBlack} from '../text/index'\r\nimport {CustomInput} from '../login/index'\r\n\r\n//state\r\nimport {user} from '../../graphql/var/userVar'\r\nimport {showMenu ,hideInfoBar} from '../../graphql/var/uiVar'\r\nimport {clickSideBar} from '../../states/navbarState'\r\n\r\nexport const NavBar= () =>{\r\n    const [title] = useRecoilState(clickSideBar)\r\n\r\n    const infoBarStatus = useReactiveVar(hideInfoBar)\r\n    const currentUser = useReactiveVar(user)\r\n    const showStatus = useReactiveVar(showMenu) \r\n\r\n    const items = [\r\n        {title : \"List\" , path : \"/dashboard/employee/list\"},\r\n        {title : \"Shift\" , path : \"/dashboard/employee/shift\"},\r\n    ]\r\n\r\n    return (\r\n    <Row>\r\n    <NavBarStyled>\r\n        <Col lg=\"1\">\r\n            <TextBlack fontSize =\"40px\" fontWeight =\"700\">\r\n                C\r\n            </TextBlack>\r\n        </Col>\r\n        <Col lg=\"8\">\r\n            <NavBarMidItems>\r\n            <div style={{position : \"relative\"}}>\r\n                <TextBlack fontSize=\"30px\" fontWeight=\"500\">\r\n                    { title.sideBar != \"Home\" || \"\" ? title.sideBar : `Welcome back ${currentUser.username}` }\r\n                    <MdExpandMore \r\n                        onClick={() => showMenu(!showStatus)}\r\n                        size=\"24px\" \r\n                        style={{marginLeft : \"10px\" , cursor : \"pointer\"}} \r\n                    />\r\n                </TextBlack>\r\n                <DropdownMenu isShow={showStatus} items = {items}/>\r\n            </div>\r\n            <div className=\"input-custom\">\r\n                <FiSearch style={{\r\n                    color: \"rgb(36, 36, 36)\",\r\n                    position: \"relative\",\r\n                    left: \"316px\",\r\n                    bottom: \"2px\",\r\n                    zIndex: \"1\",}} \r\n                size=\"20\" \r\n                color=\"#242424\"/>\r\n                <CustomInput\r\n                    style = {{marginLeft : \"30px\"}}\r\n                    name = \"Search\"\r\n                    width = \"300px\"\r\n                    height = \"35px\"\r\n                />\r\n            </div>\r\n            \r\n            </NavBarMidItems>\r\n        </Col>\r\n        <Col lg=\"3\">\r\n            <NavBarEndItems>\r\n            <AvatarRectangleCard name={currentUser.username} position={currentUser.position}/>\r\n            <HiMenuAlt3 onClick={() => hideInfoBar(!infoBarStatus)} style={{margin: \"0 10px\" , cursor : \"pointer\"}} size=\"30px\"/>\r\n            </NavBarEndItems>\r\n        </Col>\r\n    </NavBarStyled>\r\n    </Row>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst NavBarStyled = styled.nav`\r\n    display : flex;\r\n    align-items : center;\r\n    width : 100%;\r\n    padding : 10px 20px;\r\n    position : fixed ;\r\n    top : 0;\r\n    left : 0;\r\n    background : #ffff;\r\n    z-index : 3;\r\n`\r\nconst NavBarMidItems = styled.div`\r\n    display : flex;\r\n    padding : 0px;\r\n    align-items : center;\r\n    justify-content : space-between;\r\n`\r\nconst NavBarEndItems = styled(NavBarMidItems)`\r\n    justify-content : flex-end;\r\n    padding : 0 10px;\r\n`\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\SideBar.jsx",["184","185","186"],"import { useReactiveVar } from '@apollo/client';\r\nimport {\r\n    Link,\r\n    useHistory\r\n} from 'react-router-dom'\r\nimport Cookies from 'js-cookie'\r\nimport { useRecoilState, useRecoilValue} from 'recoil'\r\nimport {itemSideBar, clickSideBar, itemSideBarEmployee} from '../../states/navbarState'\r\n\r\n//\r\nimport {auth} from '../../graphql/var/authVar'\r\nimport {user} from '../../graphql/var/userVar'\r\n\r\n//cpn\r\nimport {SideBarStyled,SideBarItem} from '../sidebar'\r\n//icons\r\nimport { FiLogOut } from \"react-icons/fi\";\r\n \r\n\r\nexport default function SideBar() {\r\n    //state\r\n    const history = useHistory();\r\n    const [currentStateBar , setCurrentStateBar] = useRecoilState(clickSideBar)\r\n    const currentUser = useReactiveVar(user)\r\n    const sideBarState = useRecoilValue(itemSideBar)\r\n    const sideBarEmployeeState = useRecoilValue(itemSideBarEmployee)\r\n\r\n    const handleClick = (name) => {\r\n        let newVal = {\r\n            ...currentStateBar,\r\n            sideBar : name\r\n        }\r\n        setCurrentStateBar(newVal)\r\n    }\r\n\r\n    const logout = () => {\r\n        auth(false)\r\n        Cookies.remove('accessToken');\r\n        history.push('/');\r\n      };\r\n   \r\n    return (\r\n        <div className=\"\">\r\n            <SideBarStyled>\r\n                <div className=\"top_side_bar\">\r\n                    {\r\n                        currentUser.position == 'Admin' ? \r\n                        sideBarState.map((item)  =>\r\n                        <SideBarItem \r\n                            active={item.name == currentStateBar.sideBar ? true : false}\r\n                            onClick={()=>handleClick(item.name)} \r\n                            ><Link to ={item.href}>\r\n                                {item.icon}</Link>\r\n                        </SideBarItem>\r\n                        ):\r\n                        sideBarEmployeeState.map((item)  =>\r\n                        <SideBarItem \r\n                            active={item.name == currentStateBar.sideBar ? true : false}\r\n                            onClick={()=>handleClick(item.name)} \r\n                            ><Link to ={item.href}>\r\n                                {item.icon}</Link>\r\n                        </SideBarItem>\r\n                        )\r\n\r\n                        \r\n                    }\r\n                </div>\r\n                <div className=\"bot\" style={{width : \"90%\"}}>\r\n                    <SideBarItem onClick={() => logout()}>\r\n                        <FiLogOut size=\"20px\" color = \"#F8f8f8\"/>\r\n                    </SideBarItem>\r\n                </div>\r\n            </SideBarStyled>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\infoSideBar.jsx",["187"],"import React, {useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport {useRecoilState} from 'recoil'\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\n\r\nimport {itemsInfoSideBar} from '../../states/navbarState'\r\nimport {SideBarStyled} from '../sidebar'\r\nimport { TextBlackUnderline} from '../text/index'\r\nimport Holiday from './Holiday'\r\n\r\nexport  function InfoSideBar() {\r\n    const [components] = useRecoilState(itemsInfoSideBar)\r\n    const [value, onChange] = useState(new Date());\r\n\r\n    return (\r\n        <div>\r\n            <InfoBarStyled>\r\n                <ItemInfoBarStyled>\r\n                <TextBlackUnderline fontSize=\"16px\">Calendar</TextBlackUnderline>\r\n                    <Calendar\r\n                        className=\"custom-calendar\"\r\n                        onChange={onChange}\r\n                        value={value}\r\n                    />\r\n                </ItemInfoBarStyled>  \r\n                <ItemInfoBarStyled >\r\n                    <Holiday/>\r\n                </ItemInfoBarStyled> \r\n            </InfoBarStyled>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst InfoBarStyled = styled(SideBarStyled)`\r\n    width : 337px;\r\n    overflow : hidden;\r\n    height : 670px;\r\n    &:hover{\r\n        overflow-y : scroll;\r\n        overflow-x : hidden;\r\n    }\r\n\r\n`\r\nconst ItemInfoBarStyled = styled.div`\r\n    display : flex;\r\n    flex-direction : column;\r\n    align-items : center;\r\n    margin : 10px 0;\r\n    width : ${props => props.width ? props.width : \"100%\"};\r\n`\r\n//height : 595px\r\n//width : 225px \r\n// margin-left : 1128px2\r\n\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\login\\index.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\text\\index.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\buttons\\index.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Request.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Home.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\sidebar.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\states\\navbarState.jsx",["188"],"D:\\Đồ án chuyên nghành\\client\\src\\components\\cards\\AvatarCard.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\cards\\CommonCard.jsx",["189"],"import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nexport const CommonCard = styled.div`\r\n    width : ${props => props.width ? props.width : \"90%\"};\r\n    height : ${props => props.height ? props.height : \"350px\"};\r\n    display : inline-table;\r\n    padding : 30px 40px;\r\n    background : #ffff;\r\n    border-radius : 20px;\r\n    margin : 1rem 0;\r\n    &:hover{\r\n        box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.1);\r\n    }\r\n`","D:\\Đồ án chuyên nghành\\client\\src\\pages\\test.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\routes\\PrivateRoute.jsx",["190"],"import React from 'react'\r\nimport {Route , Redirect} from 'react-router-dom'\r\nimport {auth} from '../../graphql/var/authVar'\r\n// import * as isAuth from '../functions/isAuth' //return boolean\r\n\r\nexport function PrivateRoute({ component: Component,isAuth, ...rest }) {\r\n    return (\r\n      <Route\r\n        {...rest}\r\n        render={() =>\r\n          isAuth === true ? (\r\n            <Component />\r\n          ) : (\r\n            <Redirect\r\n              to= \"/login\"\r\n            />\r\n          )\r\n        }\r\n      />\r\n    );\r\n  }\r\n\r\n\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\functions\\isAuth.jsx",["191","192"],"D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\authVar.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\userVar.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\graphql\\mutation\\index.js",[],"D:\\Đồ án chuyên nghành\\client\\src\\graphql\\query\\index.js",[],"D:\\Đồ án chuyên nghành\\client\\src\\states\\adminState.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\graphql\\var\\uiVar.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\dropDownMenu.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\components\\DropdownMenu.jsx",[],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Shift\\Shift.jsx",["193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215"],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Employee\\Employee.jsx",["216","217","218","219"],"import React, {useEffect, useState} from 'react'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n  } from \"react-router-dom\";\r\nimport Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\nimport Select from 'react-select'\r\nimport styled from 'styled-components'\r\n\r\nimport { useQuery , useMutation, useLazyQuery } from '@apollo/client';\r\nimport { useForm , Controller } from \"react-hook-form\";\r\n\r\nimport {\r\n    FormLogin,\r\n    ContainerMiddle,\r\n    TitleH1,\r\n    InputItems,\r\n    CustomInput\r\n} from '../../../components/login/index'\r\nimport { \r\n    TextBlack,\r\n    TextLight,\r\n    TextError\r\n } from \"../../../components/text\";\r\n import { \r\n    PrimaryButton\r\n } from \"../../../components/buttons/index\";\r\nimport ReactLoading from 'react-loading';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {CommonCard} from '../../../components/cards/CommonCard'\r\n//gql\r\nimport {\r\n    GET_ALL_EMPLOYEES,\r\n    GET_EMPLOYEE_BY_ID,\r\n    GET_ALL_LEAVES,\r\n} from '../../../graphql/query/index'\r\nimport {\r\n    CREATE_NEW_EMPLOYEE,\r\n    DELETE_EMPLOYEE_BY_ID,\r\n    EDIT_EMPLOYEE_BY_ID,\r\n    SIGN_UP_LEAVE,\r\n    DELETE_LEAVE,\r\n    APPROVE_LEAVE\r\n} from '../../../graphql/mutation/index'\r\n\r\n//components\r\nimport List from './List'\r\nimport Leave from './Leave'\r\n\r\nexport default function Employee() {\r\n    const [onAdd , setOnAdd] = useState(false)\r\n    const [onEdit , setOnEdit] = useState(false)\r\n    const [currentEmp, setCurrentEmp] = useState({\r\n        id : '',\r\n        username : '',\r\n        name : '',\r\n        phone : '',\r\n        email : '',\r\n        address : '',\r\n        position : {value : '' , label : ''},\r\n    })\r\n\r\n\r\n    const { register, handleSubmit, errors , control} = useForm();\r\n    const { register : registerEdit, handleSubmit : handleSubmitEdit, errors : errorsEdit , control : controlEdit} = useForm();\r\n\r\n    //QUERY\r\n    const { loading, error, data ,refetch } = useQuery(GET_ALL_EMPLOYEES , {\r\n        onError : (err) => { toast(`⛔ ${err}`)}\r\n    });\r\n    const { loading : loadingLeaves, data : dataLeaves } = useQuery(GET_ALL_LEAVES ,{ \r\n        onError : (err) => { toast(`⛔ ${err}`)} });\r\n    // const [loadLeaves, { loading : loadingLeaves, data : dataLeaves }] = useLazyQuery(GET_ALL_LEAVES);\r\n    const [getEmployeeById,{ loading : queryEditEmployeeId, data : dataEmployeeId }] = useLazyQuery(GET_EMPLOYEE_BY_ID,{\r\n        onCompleted: dataEmployeeId => {\r\n            setCurrentEmp({...dataEmployeeId.getEmployeeById, \r\n                position : { value : dataEmployeeId.getEmployeeById.position, label : dataEmployeeId.getEmployeeById.position}\r\n            });\r\n            \r\n            \r\n        }\r\n    });\r\n\r\n    //MUTATE\r\n    const [createNewEmployee,{ loading: mutationLoading, error: mutationError }] = useMutation(CREATE_NEW_EMPLOYEE,{\r\n        credentials: 'include',\r\n        refetchQueries :[\r\n            {query :GET_ALL_EMPLOYEES }\r\n        ]\r\n      });\r\n    const [deleteEmployee, {  error : mutationDeleteError }] = useMutation(DELETE_EMPLOYEE_BY_ID,{\r\n        credentials: 'include',\r\n        onCompleted : () => { toast(`✅ Success`)},\r\n        refetchQueries :[\r\n            {query :GET_ALL_EMPLOYEES }\r\n        ]\r\n      });\r\n    const [editEmployeeByID,{ loading: mutationEditLoading, error: mutationEditError }] = useMutation(EDIT_EMPLOYEE_BY_ID,{\r\n    credentials: 'include',\r\n        refetchQueries :[\r\n            {query : GET_ALL_EMPLOYEES }\r\n        ]\r\n    });\r\n    const [signUpLeave,{ loading: loadingSignUpLeave }] = useMutation(SIGN_UP_LEAVE,{\r\n        credentials: 'include',\r\n            refetchQueries :[\r\n                {query : GET_ALL_LEAVES }\r\n            ],\r\n            onCompleted : () => { toast(`✅ Success`)}\r\n        });\r\n    const [approvedLeave,{ loading: loadingApprovedLeave }] = useMutation(APPROVE_LEAVE,{\r\n        credentials: 'include',\r\n            refetchQueries :[\r\n                {query : GET_ALL_LEAVES }\r\n            ],\r\n            onCompleted : () => { toast(`✅ Success`)}\r\n        });\r\n    const [deleteLeave,{ loading: loadingDeleteLeave}] = useMutation(DELETE_LEAVE,{\r\n        credentials: 'include',\r\n            refetchQueries :[\r\n                {query : GET_ALL_LEAVES }\r\n            ],\r\n            onCompleted : () => { toast(`✅ Success`)}\r\n        });\r\n\r\n    const opionsPos = [\r\n        {value : 'Bartender', label : 'Bartender'},\r\n        {value : 'Cashier', label : 'Cashier'},\r\n        {value : 'Dishwasher', label : 'Dishwasher'}\r\n    ]\r\n    if (error || mutationError || mutationDeleteError || mutationEditError){\r\n        toast(`⛔ ${error}`);\r\n        toast(`⛔ ${mutationError}`);\r\n        toast(`⛔ ${mutationDeleteError}`);\r\n        toast(`⛔ ${mutationEditError}`);\r\n    }\r\n\r\n    const onSubmit = async (newEmp) => {\r\n        try{    \r\n            const {data} = await createNewEmployee({\r\n                variables : {\r\n                    username : newEmp.username,\r\n                    password : newEmp.password,\r\n                    email : newEmp.email,\r\n                    name : newEmp.name,\r\n                    phone : newEmp.phone,\r\n                    position : newEmp.position.value,\r\n                    address : newEmp.address\r\n                }\r\n            })\r\n            if(data){\r\n                refetch();\r\n                setOnAdd(false);\r\n                toast('✅ Create successfull !')\r\n            }\r\n        }catch(err){\r\n            toast(`⛔ ${err.message}`);\r\n        }\r\n    }\r\n\r\n    const onSubmitEdit = async (data) => {\r\n        try {\r\n            const rs = await editEmployeeByID({\r\n                variables : {\r\n                    id : currentEmp.id,\r\n                    username : data.username,\r\n                    name : data.name,\r\n                    phone : data.phone,\r\n                    email : data.email,\r\n                    address : data.address,\r\n                    position : data.position.value\r\n                }\r\n            })\r\n            if(rs.data){\r\n                refetch();\r\n                toast('✅ Update successfuly')\r\n                setOnEdit(false)\r\n            }\r\n            console.log(data)\r\n        } catch (error) {\r\n            toast(`⛔ ${error}`)\r\n        }\r\n        \r\n    }\r\n\r\n    const handleDelete = async (idEmployee) => {\r\n        deleteEmployee({\r\n                variables : {\r\n                    id : idEmployee\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleEdit = async (idEmployee) => {\r\n        getEmployeeById(\r\n            {\r\n                variables : { id : idEmployee},\r\n            } \r\n        )\r\n        console.log(currentEmp)\r\n        setOnEdit(true);\r\n    }\r\n    \r\n\r\n    if(loading) return <ReactLoading type={\"bars\"} color={\"#242424\"} height={50} width={50} />\r\n\r\n    return (\r\n        <Router>\r\n        <div style={{overflowX : \"scroll\" , padding : \"10px\"}}>\r\n            <CommonCard width={\"100%\"}>\r\n                <div className=\"flex-items\">\r\n                    <TotalCard>\r\n                        <ItemsInCard>\r\n                            <Link to=\"/dashboard/employee\">\r\n                                <TextBlack>Employees</TextBlack>\r\n                                {data ? <TextBlack style={{display : \"block\"}} fontSize=\"30px\" fontWeight=\"500\">{data.getAllEmployees.length}</TextBlack> : \"Fetching\"}\r\n                            </Link>\r\n                        </ItemsInCard>\r\n                    </TotalCard>\r\n                    {\r\n                        loadingLeaves ? <ReactLoading type={\"spin\"} color={\"#242424\"} height={30} width={30} /> :\r\n                        <TotalCard> \r\n                            <Link to =\"/dashboard/employee/leave\">\r\n                            <ItemsInCard>\r\n                                <TextBlack>Leaves Today</TextBlack>\r\n                                <TextBlack style={{display : \"block\"}} fontSize=\"30px\" fontWeight=\"500\">{dataLeaves.getAllLeaves.length}</TextBlack>\r\n                            </ItemsInCard>\r\n                            </Link>\r\n                        </TotalCard>\r\n                    }\r\n                    \r\n                </div>\r\n                <Switch>\r\n                    {\r\n                        loading ? \"\" : \r\n                        <Route exact={true} path = \"/dashboard/employee\" component={() => \r\n                        <List \r\n                            refetch={refetch} \r\n                            onAdd={onAdd} \r\n                            setOnAdd={setOnAdd} \r\n                            loading ={loading} \r\n                            handleDelete={handleDelete} \r\n                            handleEdit={handleEdit} \r\n                            data={data.getAllEmployees} \r\n                            />\r\n                        }/>\r\n                    }\r\n                    {\r\n                        loadingLeaves ? \"\" :\r\n                        <Route  path = \"/dashboard/employee/leave\" component={() =>\r\n                            <Leave \r\n                                data = {dataLeaves.getAllLeaves}\r\n                                signUpLeave = {signUpLeave}\r\n                                loadingSignUpLeave = {loadingSignUpLeave}\r\n                                approvedLeave = {approvedLeave}\r\n                                deleteLeave = {deleteLeave}\r\n                            />\r\n                        }/>\r\n                    }\r\n                    \r\n                </Switch>\r\n            </CommonCard>\r\n            <Rodal visible={onAdd} onClose={() => setOnAdd(false)} showCloseButton={true}>\r\n                <FormMaxWidthHeight onSubmit={handleSubmit(onSubmit)} >\r\n                {mutationLoading ? <ReactLoading type={\"bars\"} color={\"#242424\"} height={50} width={50} /> :\r\n                    <ContainerMiddle style={{overflow : \"scroll\"}}>\r\n                    <TitleH1 >New Employee </TitleH1>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Username</TextBlack>\r\n                        <CustomInput  name=\"username\" height = \"40px\" placeholder=\"Username ...\" ref={register({ required: true })} />\r\n                        {errors.username && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Password</TextBlack>\r\n                        <CustomInput  name=\"password\" type=\"password\"  height = \"40px\" placeholder=\"Password ...\" ref={register({ required: true })} />\r\n                        {errors.password && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Full Name</TextBlack>\r\n                        <CustomInput  name=\"name\" height = \"40px\" placeholder=\"Full name ...\" ref={register({ required: true })} />\r\n                        {errors.name && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Phone</TextBlack>\r\n                        <CustomInput  name=\"phone\"   height = \"40px\" placeholder=\"Phone ...\" ref={register}/>\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Email</TextBlack>\r\n                        <CustomInput  name=\"email\" type=\"email\"  height = \"40px\" placeholder=\"Email ...\" ref={register({ required: true })} />\r\n                        {errors.email && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Address</TextBlack>\r\n                        <CustomInput  name=\"address\" height = \"40px\" placeholder=\"Address ...\" ref={register}/>\r\n                    </InputItems>\r\n                    <section>\r\n                        <TextBlack style={{margin : \"10px 0\"}} fontWeight =\"500\" fontSize = \"16px\">Position</TextBlack>\r\n                        <Controller\r\n                            as={Select}\r\n                            options={opionsPos}\r\n                            name=\"position\"\r\n                            isClearable\r\n                            control={control}\r\n                            defaultValue ={opionsPos[0]}\r\n                        />\r\n                    </section>\r\n                    <InputItems>\r\n                        <PrimaryButton type=\"submit\"> \r\n                            <TextLight fontWeight = \"500\" fontSize=\"14px\">Create</TextLight> \r\n                        </PrimaryButton>\r\n                    </InputItems>\r\n                </ContainerMiddle>\r\n                } \r\n                </FormMaxWidthHeight>\r\n            </Rodal>\r\n            <Rodal visible={onEdit} onClose={() => setOnEdit(false)} showCloseButton={true}>\r\n                <FormMaxWidthHeight onSubmit={handleSubmitEdit(onSubmitEdit)} >\r\n                {(queryEditEmployeeId || mutationEditLoading) ? <ReactLoading type={\"bars\"} color={\"#242424\"} height={50} width={50} /> :\r\n                    <ContainerMiddle style={{overflow : \"scroll\"}}>\r\n                    <TitleH1 >Edit Employee </TitleH1>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Username</TextBlack>\r\n                        <CustomInput value={currentEmp.username} onChange={(e)=> setCurrentEmp({ ...currentEmp ,username : e.target.value})} name=\"username\" height = \"40px\" placeholder=\"Username ...\" ref={registerEdit({ required: true })} />\r\n                        {errorsEdit.username && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Full Name</TextBlack>\r\n                        <CustomInput value={currentEmp.name}  onChange={(e)=> setCurrentEmp({ ...currentEmp ,name : e.target.value})} name=\"name\" height = \"40px\" placeholder=\"Full name ...\" ref={registerEdit({ required: true })} />\r\n                        {errorsEdit.name && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Phone</TextBlack>\r\n                        <CustomInput value={currentEmp.phone}  onChange={(e)=> setCurrentEmp({ ...currentEmp ,phone : e.target.value})} name=\"phone\"   height = \"40px\" placeholder=\"Phone ...\" ref={registerEdit}/>\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Email</TextBlack>\r\n                        <CustomInput value={currentEmp.email}  onChange={(e)=> setCurrentEmp({ ...currentEmp ,email : e.target.value})} name=\"email\" type=\"email\"  height = \"40px\" placeholder=\"Email ...\" ref={registerEdit({ required: true })} />\r\n                        {errorsEdit.email && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Address</TextBlack>\r\n                        <CustomInput value={currentEmp.address}  onChange={(e)=> setCurrentEmp({ ...currentEmp ,address : e.target.value})} name=\"address\" height = \"40px\" placeholder=\"Address ...\" ref={registerEdit}/>\r\n                    </InputItems>\r\n                    <section>\r\n                        <TextBlack style={{margin : \"10px 0\"}} fontWeight =\"500\" fontSize = \"16px\">Position</TextBlack>\r\n                        <Controller\r\n                            as={Select}\r\n                            options={opionsPos}\r\n                            name=\"position\"\r\n                            isClearable\r\n                            control={controlEdit}\r\n                            defaultValue={currentEmp.position}\r\n                        />\r\n                    </section>\r\n                    <InputItems>\r\n                        <PrimaryButton type=\"submit\"> \r\n                            <TextLight fontWeight = \"500\" fontSize=\"14px\">Save</TextLight> \r\n                        </PrimaryButton>\r\n                    </InputItems>\r\n                </ContainerMiddle>\r\n                } \r\n                </FormMaxWidthHeight>\r\n            </Rodal>\r\n        </div>\r\n        </Router>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport const FormMaxWidthHeight = styled(FormLogin)`\r\n    width : 100%;\r\n    height : 100%;\r\n    overflow-x : scroll;\r\n`\r\nconst TotalCard = styled.div`\r\n   \r\n    padding : 10px 50px;\r\n    border-radius : 20px;\r\n    border : 1px solid rgba(95, 94, 94, 0.28) ;\r\n    text-align : center;\r\n    &:hover {\r\n        box-shadow: 0px 10px 25px rgba(0, 0, 0, 0.1);\r\n    }\r\n`\r\nconst ItemsInCard = styled.div`\r\n    cursor : pointer;\r\n    padding : 10px;\r\n    \r\n`\r\n","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Employee\\List.jsx",[],["220","221"],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Employee\\Leave.jsx",["222"],"import React,{useState} from 'react'\r\nimport { useForm,Controller} from 'react-hook-form'\r\nimport ReactDatePicker from 'react-datepicker'\r\nimport moment from 'moment'\r\nimport Rodal from 'rodal';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport formatDistance from 'date-fns/formatDistance'\r\nimport ReactLoading from 'react-loading';\r\n// import \r\nimport {IoIosAddCircleOutline} from 'react-icons/io'\r\nimport {IconContext } from 'react-icons'\r\nimport { Table } from 'reactstrap';\r\nimport {AiOutlineReload} from 'react-icons/ai'\r\nimport {IoRemoveCircleOutline} from 'react-icons/io5'\r\n\r\nimport {user} from '../../../graphql/var/userVar'\r\nimport {useReactiveVar } from '@apollo/client'\r\n\r\nimport Select from 'react-select'\r\nimport TextTruncate from 'react-text-truncate'; // recommend\r\nimport {CommonButtonBlack} from '../../../components/buttons/index'\r\n\r\n//componnents'../../pages/dashboard/Employee/Employee'\r\nimport {FormMaxWidthHeight} from './Employee'\r\nimport {\r\n    ContainerMiddle,\r\n    TitleH1,\r\n    InputItems,\r\n    CustomInput\r\n} from '../../../components/login/index'\r\nimport { \r\n    TextBlack,\r\n    TextLight,\r\n    TextError\r\n} from \"../../../components/text/index\";\r\nimport { \r\n    PrimaryButton   \r\n} from \"../../../components/buttons/index\";\r\n\r\n\r\nexport default function Leave({data , signUpLeave , loadingSignUpLeave, approvedLeave, deleteLeave}) {\r\n    const currentUser = useReactiveVar(user)\r\n    const [defVal, setDefVal] = useState({\r\n        dateStart : Date(),\r\n        dateEnd : Date(),\r\n        reason : \"\"\r\n    })\r\n    const [open, setOpen] = useState(false)\r\n    const { register, handleSubmit, errors , control} = useForm();\r\n    const [optionsStatus, setOptionsStatus] = useState([\r\n        { value : \"Pending\", label : \"Pending\"},\r\n        { value : \"Approved\", label : \"Approved\"},\r\n        { value : \"Declined\", label : \"Declined\"},\r\n    ])\r\n    const options = [\r\n        { value: \"Medical Leave\", label: \"Medical Leave\" },\r\n        { value: \"Casual Leave\", label: \"Casual Leave\" },\r\n      ]\r\n\r\n    // if(called && loading) return <ReactLoading type={\"bars\"} color={\"#242424\"} height={50} width={50} />\r\n    const onSubmit = (data) => {\r\n        const newLeave = {\r\n            type : data.type.value,\r\n            dateStart :  moment(data.dateStart).toDate(),\r\n            dateEnd :  moment(data.dateEnd).toDate(),\r\n            reason : data.reason,\r\n        }\r\n        console.log(newLeave)\r\n        signUpLeave(\r\n            {\r\n                variables : newLeave,\r\n            } \r\n        )\r\n        // console.log(data)\r\n    }\r\n\r\n    const onStatusChange = (data, id) => {\r\n        approvedLeave(\r\n            {\r\n                variables : {\r\n                    idLeave : id,\r\n                    newStatus : data.value\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    const handleDelete = (id) => {\r\n        deleteLeave(\r\n            {\r\n                variables : {id}\r\n            })\r\n    }\r\n    return (\r\n        <div>\r\n            <h3>Leaves</h3>\r\n            <div className=\"btn_list_between\">\r\n                <CommonButtonBlack\r\n                    width=\"100px\"\r\n                    height =\"40px\"\r\n                    onClick={() => setOpen(!open)}\r\n                >\r\n                    <IoIosAddCircleOutline size=\"24\" color=\"#f8f8f8\"/>\r\n                    Add\r\n                </CommonButtonBlack>\r\n                <CommonButtonBlack\r\n                    width=\"40px\"\r\n                    height =\"40px\"\r\n                    borderRadius=\"50%\"\r\n                    // onClick={() => refetch()}\r\n                >\r\n                    <AiOutlineReload size=\"24\" color=\"#f8f8f8\"/>\r\n                </CommonButtonBlack>\r\n            </div>\r\n            {loadingSignUpLeave ? <ReactLoading type={\"spin\"} color={\"#242424\"} height={50} width={50} /> : \r\n                <Table hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Employee</th>\r\n                            <th>Leave Type</th>\r\n                            <th>From</th>\r\n                            <th>To</th>\r\n                            <th>Days</th>\r\n                            <th>Reason</th>\r\n                            <th>Status</th>\r\n                            <th>Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                {\r\n                        data.map((i) => \r\n                        <tbody>\r\n                            <tr>\r\n                            <th>{i.employee.name}</th>\r\n                            <th>{i.type}</th>\r\n                            <td>{moment(i.dateStart, \"x\").format('DD MMM YYYY')}</td>\r\n                            <td>{moment(i.dateEnd, \"x\").format('DD MMM YYYY')}</td>\r\n                            <td>{formatDistance(parseInt(i.dateStart),parseInt(i.dateEnd))}</td>\r\n                            <td>\r\n                                <TextTruncate\r\n                                    line={1}\r\n                                    element=\"p\"\r\n                                    truncateText=\"…\"\r\n                                    text ={i.reason}\r\n                                />\r\n                            </td>\r\n                            {\r\n                                currentUser.position === 'Admin' ?  <td style={{width : \"130px\"}}>\r\n                                    <Select \r\n                                        // placeholder = {i.status}\r\n                                        defaultValue={optionsStatus.find(option => option.value === i.status)}\r\n                                        options={optionsStatus}\r\n                                        onChange = {(e) => onStatusChange(e,i.id)}\r\n                                        components={{ DropdownIndicator:() => null, IndicatorSeparator:() => null, }}\r\n                                        />\r\n                                </td>\r\n                            : <td >{i.status === \"Pending\" ? \"Pending ⌛\" : i.status === \"Approved\" ? \"Approved ✅\" : i.status === \"Declined\" ? \"Declined ⛔\" : i.status}</td>\r\n                            }\r\n                            {\r\n                                currentUser.id === i.employee.id ? \r\n                                <td>\r\n                                    <IconContext.Provider value={  { style : { \r\n                                        padding : '5px',\r\n                                        borderRadius : '50%',\r\n                                        background : \"#f8f8f8\",\r\n                                        marginLeft : '5px',\r\n                                        cursor : 'pointer',\r\n                                        fontSize : '30px',\r\n                                    }}}>\r\n                                        <IoRemoveCircleOutline \r\n                                            style={{color : \"#ffff\", backgroundColor : \"#ff657c\"}} \r\n                                            onClick={() => handleDelete(i.id)} \r\n                                        />\r\n                                    </IconContext.Provider>\r\n                                </td>\r\n                                : <td></td>\r\n                            }\r\n                            \r\n                            </tr>\r\n                        </tbody>\r\n                    )\r\n                    }\r\n                </Table> \r\n            }\r\n            <Rodal visible={open} onClose={() => setOpen(false)} showCloseButton={true}>\r\n                <FormMaxWidthHeight onSubmit={handleSubmit(onSubmit)} >\r\n                {/* {(queryEditEmployeeId || mutationEditLoading) ? <ReactLoading type={\"bars\"} color={\"#242424\"} height={50} width={50} /> : */}\r\n                    <ContainerMiddle style={{overflow : \"scroll\"}}>\r\n                    <TitleH1 >Add Leaves </TitleH1>\r\n                    <InputItems>\r\n                        <section>\r\n                            <TextBlack style={{margin : \"10px 0\"}} fontWeight =\"500\" fontSize = \"16px\">Type</TextBlack>\r\n                            <Controller\r\n                                as={Select}\r\n                                options={options}\r\n                                name=\"type\"\r\n                                isClearable\r\n                                control={control}\r\n                                defaultValue={options[0]}\r\n                            />\r\n                        </section>\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Date Start</TextBlack>\r\n                        <InputItems>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"dateStart\"\r\n                            register={register({ required: true })} \r\n                            render={(props) => (\r\n                            <ReactDatePicker\r\n                                dateFormat=\"d MMM yyyy\"\r\n                                className=\"input\"\r\n                                placeholderText=\"Select date start\"\r\n                                isClearable\r\n                                shouldCloseOnSelect\r\n                                onChange={(e) => props.onChange(e)}\r\n                                selected={props.value}\r\n                                \r\n                            />\r\n                            )}\r\n                        />\r\n                        </InputItems>\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Date End</TextBlack>\r\n                        <InputItems>\r\n                        <Controller\r\n                            control={control}\r\n                            name=\"dateEnd\"\r\n                            register={register({ required: true })} \r\n                            render={(props) => (\r\n                            <ReactDatePicker\r\n                                dateFormat=\"d MMM yyyy\"\r\n                                className=\"input\"\r\n                                placeholderText=\"Select date end\"\r\n                                isClearable\r\n                                shouldCloseOnSelect\r\n                                onChange={(e) => props.onChange(e)}\r\n                                selected={props.value}\r\n                            />\r\n                            )}\r\n                        />\r\n                        </InputItems>\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Reason</TextBlack>\r\n                        <CustomInput value={defVal.reason}  onChange={(e)=> setDefVal({ ...defVal ,reason : e.target.value})} name=\"reason\" type=\"text\"  height = \"40px\" ref={register({ required: true })} />\r\n                        {errors.reason && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <PrimaryButton type=\"submit\"> \r\n                            <TextLight fontWeight = \"500\" fontSize=\"14px\">Save</TextLight> \r\n                        </PrimaryButton>\r\n                    </InputItems>\r\n                </ContainerMiddle>\r\n                {/* }  */}\r\n                </FormMaxWidthHeight>\r\n            </Rodal>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Đồ án chuyên nghành\\client\\src\\components\\functions\\parseToDate.js",[],["223","224"],"D:\\Đồ án chuyên nghành\\client\\src\\components\\nav\\Holiday.jsx",["225","226","227","228"],"import React, {useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport moment from 'moment'\r\nimport Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\nimport { useForm,Controller} from 'react-hook-form'\r\nimport ReactDatePicker from 'react-datepicker'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport ReactLoading from 'react-loading';\r\nimport { toast } from 'react-toastify';\r\n// import formatDistance from 'date-fns/formatDistance'\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\r\nimport isBefore from 'date-fns/isBefore'\r\n\r\nimport { useQuery , useMutation } from '@apollo/client';\r\n\r\nimport {AiOutlineMore , AiOutlineDelete} from 'react-icons/ai'\r\nimport { TextBlackUnderline} from '../text/index'\r\nimport {Menu , MenuItem} from '../DropdownMenu'\r\nimport {FormMaxWidthHeight} from '../../pages/dashboard/Employee/Employee'\r\nimport {\r\n    ContainerMiddle,\r\n    TitleH1,\r\n    InputItems,\r\n    CustomInput\r\n} from '../login/index'\r\nimport { \r\n    TextBlack,\r\n    TextLight,\r\n    TextError\r\n} from \"../text\";\r\nimport { \r\n    PrimaryButton   \r\n} from \"../buttons/index\";\r\n\r\n// mutations\r\nimport {ADD_HOLIDAY,\r\n    DELETE_HOLIDAY\r\n} from '../../graphql/mutation/index'\r\n //queries \r\nimport {GET_ALL_HOLIDAYS} from '../../graphql/query/index'\r\n//vars\r\nimport {user} from '../../graphql/var/userVar'\r\nimport { useReactiveVar } from '@apollo/client';\r\n\r\nexport default function Holiday() {\r\n    const currentUser = useReactiveVar(user)\r\n    const currentDate = new Date();\r\n    const [add, setAdd] = useState(false) //rodal add\r\n    const [show, setShow] = useState(false) //dropdown\r\n    const { register ,handleSubmit, errors ,control } = useForm();\r\n    //queries\r\n    const { loading : loadingGetAllHolidays, error : errorGetAllHolidays, data : dataGetAllHolidays , refetch } = useQuery(GET_ALL_HOLIDAYS);\r\n\r\n     //mutations\r\n     const [addHoliday,{ loading: loadingAddHoliday }] = useMutation(ADD_HOLIDAY,{\r\n        credentials: 'include',\r\n        refetchQueries :[\r\n            {query :GET_ALL_HOLIDAYS }\r\n        ],\r\n        onCompleted : () => {\r\n            toast(\"✅ Successfully\")\r\n        },\r\n        onError : () => {\r\n            toast(\"⛔ Mutation has failed\")\r\n        },\r\n        \r\n    });\r\n    const [deleteHoliday,{ loading: loadingDeleteHoliday }] = useMutation(DELETE_HOLIDAY,{\r\n        credentials: 'include',\r\n        refetchQueries :[\r\n            {query :GET_ALL_HOLIDAYS }\r\n        ],\r\n        onCompleted : () => {\r\n            toast(\"✅ Delete Successfully\")\r\n        },\r\n        onError : () => {\r\n            toast(\"⛔ Delete error\")\r\n        },\r\n        \r\n    });\r\n\r\n    //btn\r\n    const handleDelete = (id) => {\r\n        // console.log(id)\r\n        deleteHoliday({\r\n            variables : {\r\n                id : id\r\n            }\r\n        })\r\n        refetch();\r\n    }\r\n    const onSubmit = (data) => {\r\n        const trueDate = moment(data.date).toDate()\r\n        addHoliday({\r\n            variables : {\r\n                title : data.title,\r\n                date : trueDate\r\n            }\r\n        })\r\n        setAdd(false);\r\n        // console.log(data)\r\n        // const date = data.date ;  // true Date()\r\n        // const format = moment(foo).format(\"DD-MM-yyyy\")\r\n        // console.log({foo ,format })\r\n    }\r\n\r\n    return (\r\n        <div style ={{width : \"95%\" }}>\r\n        <div>\r\n            <Rodal visible={add} onClose={() => setAdd(false)} showCloseButton={true}>\r\n            <FormMaxWidthHeight onSubmit={handleSubmit(onSubmit)} >\r\n                {loadingAddHoliday ? <ReactLoading type={\"bars\"} color={\"#242424\"} height={50} width={50} /> :\r\n                <ContainerMiddle style={{overflow : \"scroll\"}}>\r\n                    <TitleH1 >New Holiday </TitleH1>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Title</TextBlack>\r\n                        <CustomInput  name=\"title\" height = \"40px\" placeholder=\"Title ...\" ref={register({ required: true })} />\r\n                        {errors.title && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                    <TextBlack fontWeight =\"500\" fontSize = \"16px\">Date</TextBlack>\r\n                    </InputItems>\r\n                    <InputItems>\r\n                    <Controller\r\n                        control={control}\r\n                        name=\"date\"\r\n                        register={register({ required: true })} \r\n                        render={(props) => (\r\n                        <ReactDatePicker\r\n                            dateFormat=\"d MMM yyyy\"\r\n                            className=\"input\"\r\n                            placeholderText=\"Select date\"\r\n                            isClearable\r\n                            shouldCloseOnSelect\r\n                            onChange={(e) => props.onChange(e)}\r\n                            selected={props.value}\r\n                        />\r\n                        )}\r\n                    />\r\n                    </InputItems>\r\n                    <InputItems style={{marginTop : \"50px\"}}>\r\n                        <PrimaryButton type=\"submit\"> \r\n                            <TextLight fontWeight = \"500\" fontSize=\"14px\">Create</TextLight> \r\n                        </PrimaryButton>\r\n                    </InputItems>\r\n                </ContainerMiddle>}\r\n                </FormMaxWidthHeight>\r\n            </Rodal>\r\n        </div>\r\n        <div>\r\n            <div>\r\n                {\r\n                    currentUser.position != \"Admin\" ?\r\n                    <>\r\n                    <CustomUnderLineText fontSize=\"16px\">\r\n                    <span>Holidays</span>\r\n                    </CustomUnderLineText>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <CustomUnderLineText fontSize=\"16px\">\r\n                    <span>Upcoming holidays</span>\r\n                    <AiOutlineMore onClick={() => setShow(!show)} size=\"20px\"/>\r\n                    </CustomUnderLineText>\r\n                    <Menu show={show}\r\n                        right = \"10px\"\r\n                    >\r\n                        <MenuItem onClick={() => {\r\n                            setAdd(true)\r\n                            setShow(!show);\r\n                            }} >Add</MenuItem>\r\n                        <MenuItem onClick={() => {\r\n                            refetch()\r\n                            setShow(!show)\r\n                            }} >Refetch</MenuItem>\r\n                    </Menu>\r\n                    </>\r\n                }\r\n            </div>\r\n            {loadingGetAllHolidays || loadingDeleteHoliday ? <ReactLoading type={\"spin\"} color={\"#242424\"} height={50} width={50} />  :\r\n            <ListStyled>\r\n                {\r\n                    dataGetAllHolidays.getAllHolidays.filter(i => moment(parseInt(i.date)).toDate() > currentDate).map(iFilter => \r\n                        <ItemListStyled >\r\n                            <div style={{display : \"flex\", justifyContent:\"space-between\"}}\r\n                            >\r\n                                {/* formatDistance(parseInt(i.dateStart),parseInt(i.dateEnd)) */}\r\n                                <p>{formatDistanceToNow(parseInt(iFilter.date), { addSuffix: true })} ({moment(iFilter.date, \"x\").format(\"DD MM YYYY\")})</p>\r\n                                {\r\n                                    currentUser.position == \"Admin\" ? <AiOutlineDelete size=\"20\" onClick={() => { handleDelete(iFilter.id) }}/> :\r\n                                    \"\"\r\n                                }\r\n                                </div>\r\n                            <h4>{iFilter.title}</h4>\r\n                        </ItemListStyled>\r\n                    )  \r\n                \r\n                }\r\n            </ListStyled>\r\n            }\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport const ListStyled = styled.ul`\r\n    list-style : none;\r\n    width : 100%;\r\n`\r\n\r\nexport const ItemListStyled = styled.li`\r\n    padding : 10px 15px;\r\n    border: 1px solid rgba(95, 94, 94, 0.2);\r\n    border-radius : 20px;\r\n    margin-top : 15px;\r\n    cursor: pointer;\r\n    &:hover {\r\n        box-shadow: 0px 10px 54px rgba(0, 0, 0, 0.1);\r\n    }\r\n`\r\n\r\nconst CustomUnderLineText = styled(TextBlackUnderline)`\r\n    display : flex;\r\n    justify-content : space-between;\r\n    align-items : center;\r\n`","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Salary\\Salary.jsx",["229","230","231","232","233","234","235","236","237"],"import React,{useState, useRef} from 'react'\r\nimport { Table} from 'reactstrap';\r\nimport { useQuery , useMutation ,useLazyQuery} from '@apollo/client';\r\n\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\nimport ReactLoading from 'react-loading';\r\nimport Select from 'react-select'\r\nimport { toast } from 'react-toastify';\r\n\r\nimport {CommonButtonBlack} from '../../../components/buttons/index'\r\nimport {IoEyeSharp} from 'react-icons/io5';\r\nimport {CommonCard} from '../../../components/cards/CommonCard'\r\n\r\n//gql\r\nimport {\r\n  GET_ALL_PAYROLLS,\r\n  GET_PAYROLLS_BY_ID\r\n} from '../../../graphql/query/index'\r\n\r\nexport default function Salary() {\r\n  const headers = [\r\n    { label: \"Full name\", key: \"name\" },\r\n    { label: \"Username\", key: \"username\" },\r\n    { label: \"Email\", key: \"email\" },\r\n    { label: \"Position\", key: \"position\" },\r\n    { label: \"Work Time\", key: \"workDays\" },\r\n    { label: \"Salary\", key: \"salary\" },\r\n    { label: \"RealWages\", key: \"realWages\" }\r\n    ];\r\n    const [options, setOptions] = useState([])\r\n    const [csvData, setCsvData] = useState([])\r\n    //QUERY\r\n    const { loading, error, data ,refetch } = useQuery(GET_ALL_PAYROLLS , {\r\n      onCompleted : () => {\r\n        const arr = []\r\n        data.getAllPayrolls.map(i => arr.push({value : i.id, label : i.name}))\r\n        setOptions(arr)\r\n      },  \r\n      onError : (err) => { toast(`⛔ ${err}`)}\r\n    });\r\n    const [loadPayroll, { called, loading : loadingPayroll, data : dataPayroll }] = useLazyQuery(\r\n      GET_PAYROLLS_BY_ID,\r\n      {\r\n        onCompleted : () => { \r\n          const arr = [] ;\r\n          dataPayroll.getPayrollById.employees.map( i => {\r\n          arr.push({ \r\n            name : i.name ,\r\n            username : i.username, \r\n            email : i.email, \r\n            position : i.position,\r\n            workDays : i.workDays.length, \r\n            salary : parseInt(i.salary.amount).toLocaleString('it-IT', {style : 'currency', currency : 'VND'}),\r\n            realWages : (parseInt(i.salary.amount)*i.workDays.length).toLocaleString('it-IT', {style : 'currency', currency : 'VND'})\r\n          })}\r\n        )\r\n        setCsvData(arr)\r\n        }\r\n      }\r\n    );\r\n\r\n    const handleChange = selectedOption => {\r\n      // console.log(`Option selected:`, selectedOption);\r\n      loadPayroll({\r\n        variables : { idPayroll : selectedOption.value}\r\n      })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n          <h1>Salaries : </h1>\r\n          <div style={{display : \"flex\" , alignItems : \"center\", justifyContent : \"space-between\"}}>\r\n            <div style={{ width : \"70%\"}}>\r\n              <Select \r\n                options = {options} \r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n            <CommonButtonBlack>\r\n            <CSVLink style={{color : \"#FFFF\"}} data={csvData} headers={headers}>Export</CSVLink>\r\n          </CommonButtonBlack>\r\n          </div>\r\n          <CommonCard width=\"100%\">\r\n              {loadingPayroll ? <ReactLoading type={\"spin\"} color={\"#242424\"} height={30} width={30} />:\r\n              <Table responsive hover>\r\n                <thead>\r\n                  <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Username</th>\r\n                    <th>Email</th>\r\n                    <th>Position</th>\r\n                    <th>Worktime</th>\r\n                    <th>Salary</th>\r\n                    <th>Realwages</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    loadingPayroll ? <ReactLoading type={\"spin\"} color={\"#242424\"} height={30} width={30} /> :\r\n                    dataPayroll && dataPayroll.getPayrollById.employees.map( (i, index) => \r\n                    <tr>\r\n                      <th scope=\"row\">{index +1}</th>\r\n                      <td>{i.name}</td>\r\n                      <td>{i.username}</td>\r\n                      <td>{i.email}</td>\r\n                      <td>{i.position}</td>\r\n                      <td>{i.workDays.length}</td>\r\n                      <td>{parseInt(i.salary.amount).toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</td>\r\n                      <td>{(parseInt(i.salary.amount)*i.workDays.length).toLocaleString('it-IT', {style : 'currency', currency : 'VND'})}</td>\r\n                    </tr>\r\n                    )\r\n                  }\r\n                </tbody>\r\n              </Table>\r\n              }\r\n          </CommonCard>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Shift\\SignUpShift.jsx",["238","239","240","241","242","243","244","245","246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268"],"D:\\Đồ án chuyên nghành\\client\\src\\pages\\dashboard\\Shift\\ManageShift.jsx",["269","270","271","272","273","274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],{"ruleId":"299","severity":1,"message":"300","line":8,"column":9,"nodeType":"301","messageId":"302","endLine":8,"endColumn":23},{"ruleId":"303","replacedBy":"304"},{"ruleId":"305","replacedBy":"306"},{"ruleId":"299","severity":1,"message":"307","line":1,"column":16,"nodeType":"301","messageId":"302","endLine":1,"endColumn":25},{"ruleId":"299","severity":1,"message":"308","line":9,"column":10,"nodeType":"301","messageId":"302","endLine":9,"endColumn":24},{"ruleId":"299","severity":1,"message":"309","line":11,"column":8,"nodeType":"301","messageId":"302","endLine":11,"endColumn":15},{"ruleId":"299","severity":1,"message":"310","line":33,"column":12,"nodeType":"301","messageId":"302","endLine":33,"endColumn":16},{"ruleId":"311","severity":1,"message":"312","line":41,"column":8,"nodeType":"313","endLine":41,"endColumn":10,"suggestions":"314"},{"ruleId":"299","severity":1,"message":"315","line":1,"column":8,"nodeType":"301","messageId":"302","endLine":1,"endColumn":13},{"ruleId":"316","severity":1,"message":"317","line":43,"column":37,"nodeType":"318","messageId":"319","endLine":43,"endColumn":39},{"ruleId":"316","severity":1,"message":"320","line":47,"column":46,"nodeType":"318","messageId":"319","endLine":47,"endColumn":48},{"ruleId":"316","severity":1,"message":"320","line":50,"column":47,"nodeType":"318","messageId":"319","endLine":50,"endColumn":49},{"ruleId":"316","severity":1,"message":"320","line":58,"column":47,"nodeType":"318","messageId":"319","endLine":58,"endColumn":49},{"ruleId":"299","severity":1,"message":"321","line":15,"column":12,"nodeType":"301","messageId":"302","endLine":15,"endColumn":22},{"ruleId":"299","severity":1,"message":"322","line":18,"column":9,"nodeType":"301","messageId":"302","endLine":18,"endColumn":20},{"ruleId":"299","severity":1,"message":"315","line":1,"column":8,"nodeType":"301","messageId":"302","endLine":1,"endColumn":13},{"ruleId":"299","severity":1,"message":"323","line":3,"column":9,"nodeType":"301","messageId":"302","endLine":3,"endColumn":13},{"ruleId":"299","severity":1,"message":"324","line":1,"column":10,"nodeType":"301","messageId":"302","endLine":1,"endColumn":21},{"ruleId":"299","severity":1,"message":"325","line":1,"column":23,"nodeType":"301","messageId":"302","endLine":1,"endColumn":32},{"ruleId":"299","severity":1,"message":"307","line":1,"column":16,"nodeType":"301","messageId":"302","endLine":1,"endColumn":25},{"ruleId":"299","severity":1,"message":"326","line":10,"column":5,"nodeType":"301","messageId":"302","endLine":10,"endColumn":11},{"ruleId":"299","severity":1,"message":"327","line":22,"column":8,"nodeType":"301","messageId":"302","endLine":22,"endColumn":19},{"ruleId":"299","severity":1,"message":"328","line":23,"column":8,"nodeType":"301","messageId":"302","endLine":23,"endColumn":17},{"ruleId":"299","severity":1,"message":"329","line":24,"column":8,"nodeType":"301","messageId":"302","endLine":24,"endColumn":25},{"ruleId":"299","severity":1,"message":"330","line":28,"column":9,"nodeType":"301","messageId":"302","endLine":28,"endColumn":13},{"ruleId":"299","severity":1,"message":"331","line":28,"column":16,"nodeType":"301","messageId":"302","endLine":28,"endColumn":24},{"ruleId":"299","severity":1,"message":"332","line":30,"column":5,"nodeType":"301","messageId":"302","endLine":30,"endColumn":14},{"ruleId":"299","severity":1,"message":"333","line":45,"column":10,"nodeType":"301","messageId":"302","endLine":45,"endColumn":20},{"ruleId":"299","severity":1,"message":"334","line":45,"column":23,"nodeType":"301","messageId":"302","endLine":45,"endColumn":37},{"ruleId":"299","severity":1,"message":"335","line":46,"column":10,"nodeType":"301","messageId":"302","endLine":46,"endColumn":23},{"ruleId":"299","severity":1,"message":"336","line":75,"column":12,"nodeType":"301","messageId":"302","endLine":75,"endColumn":20},{"ruleId":"299","severity":1,"message":"337","line":75,"column":22,"nodeType":"301","messageId":"302","endLine":75,"endColumn":33},{"ruleId":"299","severity":1,"message":"338","line":76,"column":12,"nodeType":"301","messageId":"302","endLine":76,"endColumn":16},{"ruleId":"299","severity":1,"message":"339","line":76,"column":18,"nodeType":"301","messageId":"302","endLine":76,"endColumn":25},{"ruleId":"299","severity":1,"message":"340","line":82,"column":13,"nodeType":"301","messageId":"302","endLine":82,"endColumn":21},{"ruleId":"299","severity":1,"message":"341","line":82,"column":37,"nodeType":"301","messageId":"302","endLine":82,"endColumn":43},{"ruleId":"299","severity":1,"message":"342","line":82,"column":55,"nodeType":"301","messageId":"302","endLine":82,"endColumn":64},{"ruleId":"299","severity":1,"message":"343","line":86,"column":69,"nodeType":"301","messageId":"302","endLine":86,"endColumn":76},{"ruleId":"344","severity":1,"message":"345","line":89,"column":49,"nodeType":"346","messageId":"347","endLine":89,"endColumn":51},{"ruleId":"344","severity":1,"message":"345","line":99,"column":55,"nodeType":"346","messageId":"347","endLine":99,"endColumn":57},{"ruleId":"299","severity":1,"message":"348","line":110,"column":32,"nodeType":"301","messageId":"302","endLine":110,"endColumn":47},{"ruleId":"299","severity":1,"message":"349","line":123,"column":34,"nodeType":"301","messageId":"302","endLine":123,"endColumn":51},{"ruleId":"299","severity":1,"message":"307","line":1,"column":16,"nodeType":"301","messageId":"302","endLine":1,"endColumn":25},{"ruleId":"299","severity":1,"message":"350","line":78,"column":68,"nodeType":"301","messageId":"302","endLine":78,"endColumn":82},{"ruleId":"299","severity":1,"message":"351","line":115,"column":37,"nodeType":"301","messageId":"302","endLine":115,"endColumn":57},{"ruleId":"299","severity":1,"message":"352","line":122,"column":35,"nodeType":"301","messageId":"302","endLine":122,"endColumn":53},{"ruleId":"303","replacedBy":"353"},{"ruleId":"305","replacedBy":"354"},{"ruleId":"299","severity":1,"message":"355","line":50,"column":27,"nodeType":"301","messageId":"302","endLine":50,"endColumn":43},{"ruleId":"303","replacedBy":"356"},{"ruleId":"305","replacedBy":"357"},{"ruleId":"299","severity":1,"message":"358","line":13,"column":8,"nodeType":"301","messageId":"302","endLine":13,"endColumn":16},{"ruleId":"299","severity":1,"message":"359","line":53,"column":54,"nodeType":"301","messageId":"302","endLine":53,"endColumn":73},{"ruleId":"316","severity":1,"message":"317","line":154,"column":42,"nodeType":"318","messageId":"319","endLine":154,"endColumn":44},{"ruleId":"316","severity":1,"message":"320","line":191,"column":58,"nodeType":"318","messageId":"319","endLine":191,"endColumn":60},{"ruleId":"299","severity":1,"message":"360","line":1,"column":25,"nodeType":"301","messageId":"302","endLine":1,"endColumn":31},{"ruleId":"299","severity":1,"message":"361","line":3,"column":21,"nodeType":"301","messageId":"302","endLine":3,"endColumn":32},{"ruleId":"299","severity":1,"message":"362","line":5,"column":19,"nodeType":"301","messageId":"302","endLine":5,"endColumn":30},{"ruleId":"299","severity":1,"message":"363","line":11,"column":9,"nodeType":"301","messageId":"302","endLine":11,"endColumn":19},{"ruleId":"299","severity":1,"message":"364","line":33,"column":13,"nodeType":"301","messageId":"302","endLine":33,"endColumn":20},{"ruleId":"299","severity":1,"message":"365","line":33,"column":22,"nodeType":"301","messageId":"302","endLine":33,"endColumn":27},{"ruleId":"299","severity":1,"message":"343","line":33,"column":35,"nodeType":"301","messageId":"302","endLine":33,"endColumn":42},{"ruleId":"299","severity":1,"message":"366","line":41,"column":27,"nodeType":"301","messageId":"302","endLine":41,"endColumn":33},{"ruleId":"344","severity":1,"message":"345","line":46,"column":55,"nodeType":"346","messageId":"347","endLine":46,"endColumn":57},{"ruleId":"299","severity":1,"message":"307","line":1,"column":16,"nodeType":"301","messageId":"302","endLine":1,"endColumn":25},{"ruleId":"299","severity":1,"message":"367","line":2,"column":8,"nodeType":"301","messageId":"302","endLine":2,"endColumn":13},{"ruleId":"299","severity":1,"message":"368","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":14},{"ruleId":"299","severity":1,"message":"369","line":5,"column":8,"nodeType":"301","messageId":"302","endLine":5,"endColumn":14},{"ruleId":"299","severity":1,"message":"370","line":7,"column":10,"nodeType":"301","messageId":"302","endLine":7,"endColumn":15},{"ruleId":"299","severity":1,"message":"371","line":9,"column":22,"nodeType":"301","messageId":"302","endLine":9,"endColumn":28},{"ruleId":"299","severity":1,"message":"326","line":10,"column":5,"nodeType":"301","messageId":"302","endLine":10,"endColumn":11},{"ruleId":"299","severity":1,"message":"372","line":11,"column":5,"nodeType":"301","messageId":"302","endLine":11,"endColumn":10},{"ruleId":"299","severity":1,"message":"373","line":12,"column":5,"nodeType":"301","messageId":"302","endLine":12,"endColumn":9},{"ruleId":"299","severity":1,"message":"374","line":14,"column":10,"nodeType":"301","messageId":"302","endLine":14,"endColumn":13},{"ruleId":"299","severity":1,"message":"375","line":14,"column":16,"nodeType":"301","messageId":"302","endLine":14,"endColumn":19},{"ruleId":"299","severity":1,"message":"376","line":15,"column":10,"nodeType":"301","messageId":"302","endLine":15,"endColumn":18},{"ruleId":"299","severity":1,"message":"361","line":15,"column":21,"nodeType":"301","messageId":"302","endLine":15,"endColumn":32},{"ruleId":"299","severity":1,"message":"377","line":15,"column":34,"nodeType":"301","messageId":"302","endLine":15,"endColumn":46},{"ruleId":"299","severity":1,"message":"378","line":16,"column":10,"nodeType":"301","messageId":"302","endLine":16,"endColumn":17},{"ruleId":"299","severity":1,"message":"379","line":16,"column":20,"nodeType":"301","messageId":"302","endLine":16,"endColumn":30},{"ruleId":"299","severity":1,"message":"380","line":17,"column":8,"nodeType":"301","messageId":"302","endLine":17,"endColumn":14},{"ruleId":"299","severity":1,"message":"381","line":18,"column":8,"nodeType":"301","messageId":"302","endLine":18,"endColumn":16},{"ruleId":"299","severity":1,"message":"327","line":21,"column":8,"nodeType":"301","messageId":"302","endLine":21,"endColumn":19},{"ruleId":"299","severity":1,"message":"328","line":22,"column":8,"nodeType":"301","messageId":"302","endLine":22,"endColumn":17},{"ruleId":"299","severity":1,"message":"329","line":23,"column":8,"nodeType":"301","messageId":"302","endLine":23,"endColumn":25},{"ruleId":"299","severity":1,"message":"332","line":28,"column":5,"nodeType":"301","messageId":"302","endLine":28,"endColumn":14},{"ruleId":"299","severity":1,"message":"382","line":29,"column":5,"nodeType":"301","messageId":"302","endLine":29,"endColumn":20},{"ruleId":"299","severity":1,"message":"383","line":30,"column":5,"nodeType":"301","messageId":"302","endLine":30,"endColumn":12},{"ruleId":"299","severity":1,"message":"384","line":31,"column":5,"nodeType":"301","messageId":"302","endLine":31,"endColumn":15},{"ruleId":"299","severity":1,"message":"385","line":32,"column":5,"nodeType":"301","messageId":"302","endLine":32,"endColumn":16},{"ruleId":"299","severity":1,"message":"386","line":35,"column":5,"nodeType":"301","messageId":"302","endLine":35,"endColumn":14},{"ruleId":"299","severity":1,"message":"387","line":36,"column":5,"nodeType":"301","messageId":"302","endLine":36,"endColumn":14},{"ruleId":"299","severity":1,"message":"388","line":37,"column":5,"nodeType":"301","messageId":"302","endLine":37,"endColumn":14},{"ruleId":"299","severity":1,"message":"389","line":40,"column":5,"nodeType":"301","messageId":"302","endLine":40,"endColumn":18},{"ruleId":"299","severity":1,"message":"390","line":43,"column":10,"nodeType":"301","messageId":"302","endLine":43,"endColumn":28},{"ruleId":"299","severity":1,"message":"307","line":1,"column":16,"nodeType":"301","messageId":"302","endLine":1,"endColumn":25},{"ruleId":"299","severity":1,"message":"391","line":1,"column":27,"nodeType":"301","messageId":"302","endLine":1,"endColumn":35},{"ruleId":"299","severity":1,"message":"369","line":4,"column":8,"nodeType":"301","messageId":"302","endLine":4,"endColumn":14},{"ruleId":"299","severity":1,"message":"370","line":6,"column":10,"nodeType":"301","messageId":"302","endLine":6,"endColumn":15},{"ruleId":"299","severity":1,"message":"374","line":8,"column":10,"nodeType":"301","messageId":"302","endLine":8,"endColumn":13},{"ruleId":"299","severity":1,"message":"375","line":8,"column":16,"nodeType":"301","messageId":"302","endLine":8,"endColumn":19},{"ruleId":"299","severity":1,"message":"376","line":10,"column":10,"nodeType":"301","messageId":"302","endLine":10,"endColumn":18},{"ruleId":"299","severity":1,"message":"361","line":10,"column":21,"nodeType":"301","messageId":"302","endLine":10,"endColumn":32},{"ruleId":"299","severity":1,"message":"377","line":10,"column":34,"nodeType":"301","messageId":"302","endLine":10,"endColumn":46},{"ruleId":"299","severity":1,"message":"378","line":11,"column":10,"nodeType":"301","messageId":"302","endLine":11,"endColumn":17},{"ruleId":"299","severity":1,"message":"379","line":11,"column":20,"nodeType":"301","messageId":"302","endLine":11,"endColumn":30},{"ruleId":"299","severity":1,"message":"380","line":12,"column":8,"nodeType":"301","messageId":"302","endLine":12,"endColumn":14},{"ruleId":"299","severity":1,"message":"381","line":13,"column":8,"nodeType":"301","messageId":"302","endLine":13,"endColumn":16},{"ruleId":"299","severity":1,"message":"327","line":16,"column":8,"nodeType":"301","messageId":"302","endLine":16,"endColumn":19},{"ruleId":"299","severity":1,"message":"328","line":17,"column":8,"nodeType":"301","messageId":"302","endLine":17,"endColumn":17},{"ruleId":"299","severity":1,"message":"329","line":18,"column":8,"nodeType":"301","messageId":"302","endLine":18,"endColumn":25},{"ruleId":"299","severity":1,"message":"330","line":21,"column":9,"nodeType":"301","messageId":"302","endLine":21,"endColumn":13},{"ruleId":"299","severity":1,"message":"331","line":21,"column":16,"nodeType":"301","messageId":"302","endLine":21,"endColumn":24},{"ruleId":"299","severity":1,"message":"332","line":23,"column":5,"nodeType":"301","messageId":"302","endLine":23,"endColumn":14},{"ruleId":"299","severity":1,"message":"382","line":24,"column":5,"nodeType":"301","messageId":"302","endLine":24,"endColumn":20},{"ruleId":"299","severity":1,"message":"383","line":25,"column":5,"nodeType":"301","messageId":"302","endLine":25,"endColumn":12},{"ruleId":"299","severity":1,"message":"384","line":26,"column":5,"nodeType":"301","messageId":"302","endLine":26,"endColumn":15},{"ruleId":"299","severity":1,"message":"385","line":27,"column":5,"nodeType":"301","messageId":"302","endLine":27,"endColumn":16},{"ruleId":"299","severity":1,"message":"386","line":30,"column":5,"nodeType":"301","messageId":"302","endLine":30,"endColumn":14},{"ruleId":"299","severity":1,"message":"387","line":31,"column":5,"nodeType":"301","messageId":"302","endLine":31,"endColumn":14},{"ruleId":"299","severity":1,"message":"388","line":32,"column":5,"nodeType":"301","messageId":"302","endLine":32,"endColumn":14},{"ruleId":"299","severity":1,"message":"390","line":37,"column":10,"nodeType":"301","messageId":"302","endLine":37,"endColumn":28},{"ruleId":"299","severity":1,"message":"333","line":39,"column":10,"nodeType":"301","messageId":"302","endLine":39,"endColumn":20},{"ruleId":"299","severity":1,"message":"334","line":39,"column":23,"nodeType":"301","messageId":"302","endLine":39,"endColumn":37},{"ruleId":"299","severity":1,"message":"335","line":40,"column":10,"nodeType":"301","messageId":"302","endLine":40,"endColumn":23},"no-unused-vars","'CookieProvider' is defined but never used.","Identifier","unusedVar","no-native-reassign",["392"],"no-negated-in-lhs",["393"],"'useEffect' is defined but never used.","'useRecoilState' is defined but never used.","'Cookies' is defined but never used.","'auth' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setAuth'. Either include it or remove the dependency array.","ArrayExpression",["394"],"'React' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'components' is assigned a value but never used.","'requestIcon' is assigned a value but never used.","'auth' is defined but never used.","'decodeToken' is defined but never used.","'isExpired' is defined but never used.","'Switch' is defined but never used.","'startOfWeek' is defined but never used.","'endOfWeek' is defined but never used.","'eachDayOfInterval' is defined but never used.","'Menu' is defined but never used.","'MenuItem' is defined but never used.","'FormLogin' is defined but never used.","'ListStyled' is defined but never used.","'ItemListStyled' is defined but never used.","'AiOutlineMore' is defined but never used.","'shiftCur' is assigned a value but never used.","'setShiftCur' is assigned a value but never used.","'week' is assigned a value but never used.","'setWeek' is assigned a value but never used.","'register' is assigned a value but never used.","'errors' is assigned a value but never used.","'getValues' is assigned a value but never used.","'refetch' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'loadingAddShift' is assigned a value but never used.","'loadingAddWorkDay' is assigned a value but never used.","'dataEmployeeId' is assigned a value but never used.","'loadingApprovedLeave' is assigned a value but never used.","'loadingDeleteLeave' is assigned a value but never used.",["392"],["393"],"'setOptionsStatus' is assigned a value but never used.",["392"],["393"],"'isBefore' is defined but never used.","'errorGetAllHolidays' is assigned a value but never used.","'useRef' is defined but never used.","'useMutation' is defined but never used.","'CSVDownload' is defined but never used.","'IoEyeSharp' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'called' is assigned a value but never used.","'Rodal' is defined but never used.","'moment' is defined but never used.","'Select' is defined but never used.","'toast' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'useQuery' is defined but never used.","'useLazyQuery' is defined but never used.","'useForm' is defined but never used.","'Controller' is defined but never used.","'styled' is defined but never used.","'Calendar' is defined but never used.","'ContainerMiddle' is defined but never used.","'TitleH1' is defined but never used.","'InputItems' is defined but never used.","'CustomInput' is defined but never used.","'TextBlack' is defined but never used.","'TextLight' is defined but never used.","'TextError' is defined but never used.","'PrimaryButton' is defined but never used.","'FormMaxWidthHeight' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"395","fix":"396"},"Update the dependencies array to be: [setAuth]",{"range":"397","text":"398"},[1216,1218],"[setAuth]"]