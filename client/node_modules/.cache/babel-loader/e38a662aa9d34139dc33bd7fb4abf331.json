{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\\\u0110\\u1ED3 \\xE1n chuy\\xEAn ngh\\xE0nh\\\\client\\\\src\\\\index.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport { CookiesProvider } from 'react-cookie';\nimport Cookies from 'js-cookie'; //css schedule\n//\n\nimport { RecoilRoot } from 'recoil'; //aphollo client\n\nimport { setContext } from \"apollo-link-context\";\nimport { createHttpLink } from 'apollo-link-http';\nimport { onError } from 'apollo-link-error';\nimport { ApolloClient, InMemoryCache, ApolloProvider, ApolloLink } from '@apollo/client'; //links\n\nconst errorLink = onError(({\n  graphQLErrors\n}) => {\n  if (graphQLErrors) graphQLErrors.map(({\n    message\n  }) => console.log(message));\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  const token = Cookies.get('accessToken');\n  return {\n    headers: { ...headers,\n      authorization: `Bearer ${token}`\n    }\n  };\n});\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache(),\n  credentials: 'include',\n  request: async operation => {\n    operation.setContext({\n      fetchOptions: {\n        credentials: 'same-origin'\n      }\n    });\n  }\n});\nconst client = new ApolloClient({\n  link: ApolloLink.from([errorLink, authLink, httpLink]),\n  cache: new InMemoryCache()\n}); ///\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(CookiesProvider, {\n  children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n      children: /*#__PURE__*/_jsxDEV(RecoilRoot, {\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 3\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["D:/Đồ án chuyên nghành/client/src/index.jsx"],"names":["React","ReactDOM","App","reportWebVitals","CookiesProvider","Cookies","RecoilRoot","setContext","createHttpLink","onError","ApolloClient","InMemoryCache","ApolloProvider","ApolloLink","errorLink","graphQLErrors","map","message","console","log","authLink","_","headers","token","get","authorization","httpLink","uri","cache","credentials","request","operation","fetchOptions","client","link","from","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,sCAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,SAAQC,eAAR,QAA+B,cAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB,C,CACA;AACA;;AACA,SAASC,UAAT,QAA2B,QAA3B,C,CAEA;;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SAAQC,cAAR,QAA8B,kBAA9B;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,EAIEC,UAJF,QAKO,gBALP,C,CAQA;;AACA,MAAMC,SAAS,GAAGL,OAAO,CAAC,CAAC;AAAEM,EAAAA;AAAF,CAAD,KAAuB;AAC/C,MAAIA,aAAJ,EAAmBA,aAAa,CAACC,GAAd,CAAkB,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAiBC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAAnC;AACpB,CAFwB,CAAzB;AAIA,MAAMG,QAAQ,GAAIb,UAAU,CAAC,CAACc,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC/C,QAAMC,KAAK,GAAIlB,OAAO,CAACmB,GAAR,CAAY,aAAZ,CAAf;AACA,SAAO;AACLF,IAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPG,MAAAA,aAAa,EAAG,UAASF,KAAM;AAFxB;AADJ,GAAP;AAMD,CAR2B,CAA5B;AAUA,MAAMG,QAAQ,GAAGlB,cAAc,CAAC;AAC9BmB,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIjB,aAAJ,EAFuB;AAG9BkB,EAAAA,WAAW,EAAG,SAHgB;AAI9BC,EAAAA,OAAO,EAAG,MAAMC,SAAN,IAAmB;AAC3BA,IAAAA,SAAS,CAACxB,UAAV,CAAqB;AACnByB,MAAAA,YAAY,EAAE;AACZH,QAAAA,WAAW,EAAE;AADD;AADK,KAArB;AAKD;AAV6B,CAAD,CAA/B;AAaA,MAAMI,MAAM,GAAG,IAAIvB,YAAJ,CAAiB;AAC9BwB,EAAAA,IAAI,EAAGrB,UAAU,CAACsB,IAAX,CAAgB,CAACrB,SAAD,EAAYM,QAAZ,EAAsBM,QAAtB,CAAhB,CADuB;AAE9BE,EAAAA,KAAK,EAAE,IAAIjB,aAAJ;AAFuB,CAAjB,CAAf,C,CAIA;;AAEAV,QAAQ,CAACmC,MAAT,eACE,QAAC,eAAD;AAAA,yBACA,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAIH,MAA1B;AAAA,2BACE,QAAC,KAAD,CAAO,UAAP;AAAA,6BACI,QAAC,UAAD;AAAA,+BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,QADF,EAUEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF,E,CAaA;AACA;AACA;;AACAnC,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport {CookiesProvider } from 'react-cookie'\nimport Cookies from 'js-cookie'\n//css schedule\n//\nimport { RecoilRoot } from 'recoil'\n\n//aphollo client\nimport { setContext } from \"apollo-link-context\";\nimport {createHttpLink } from 'apollo-link-http'\nimport { onError } from 'apollo-link-error'\nimport { \n  ApolloClient, \n  InMemoryCache,\n  ApolloProvider,\n  ApolloLink\n} from '@apollo/client';\n\n\n//links\nconst errorLink = onError(({ graphQLErrors }) => {\n  if (graphQLErrors) graphQLErrors.map(({ message }) => console.log(message))\n})\n\nconst authLink =  setContext((_, { headers }) => {\n  const token =  Cookies.get('accessToken');\n  return {\n    headers: {\n      ...headers,\n      authorization: `Bearer ${token}`\n    }\n  }\n})\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache(),\n  credentials : 'include',\n  request : async operation => {\n    operation.setContext({\n      fetchOptions: {\n        credentials: 'same-origin'\n      }\n    })\n  }\n});\n\nconst client = new ApolloClient({\n  link : ApolloLink.from([errorLink, authLink, httpLink]),\n  cache: new InMemoryCache()\n});\n///\n\nReactDOM.render(\n  <CookiesProvider>\n  <ApolloProvider client = {client}>\n    <React.StrictMode>\n        <RecoilRoot>\n          <App />\n          </RecoilRoot>\n    </React.StrictMode>\n  </ApolloProvider>\n  </CookiesProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}