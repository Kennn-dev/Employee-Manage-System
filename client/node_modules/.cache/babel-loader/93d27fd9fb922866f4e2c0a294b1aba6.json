{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\\\u0110\\u1ED3 \\xE1n chuy\\xEAn ngh\\xE0nh\\\\client\\\\src\\\\index.jsx\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { CookiesProvider } from 'react-cookie';\nimport reportWebVitals from './reportWebVitals';\nimport { useCookies } from 'react-cookie'; //css schedule\n//\n\nimport { RecoilRoot } from 'recoil'; //aphollo client\n\nimport { ApolloClient, InMemoryCache, ApolloProvider } from '@apollo/client';\nconst [cookies] = useCookies(['accessToken']); //links\n\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache(),\n  credentials: 'include',\n  request: async operation => {\n    operation.setContext({\n      fetchOptions: {\n        credentials: 'same-origin'\n      }\n    });\n  }\n});\nconst authLink = setContext((_, {\n  headers\n}) => {\n  // get the authentication token from local storage if it exists\n  if (cookies != null || cookies != \"\") {\n    const token = cookies.accessToken; // return the headers to the context so httpLink can read them\n\n    return {\n      headers: { ...headers,\n        authorization: token ? `Bearer ${token}` : \"\"\n      }\n    };\n  }\n});\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache()\n}); ///\n\nReactDOM.render( /*#__PURE__*/_jsxDEV(ApolloProvider, {\n  client: client,\n  children: /*#__PURE__*/_jsxDEV(React.StrictMode, {\n    children: /*#__PURE__*/_jsxDEV(CookiesProvider, {\n      children: /*#__PURE__*/_jsxDEV(RecoilRoot, {\n        children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 59,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();","map":{"version":3,"sources":["D:/Đồ án chuyên nghành/client/src/index.jsx"],"names":["React","ReactDOM","App","CookiesProvider","reportWebVitals","useCookies","RecoilRoot","ApolloClient","InMemoryCache","ApolloProvider","cookies","httpLink","createHttpLink","uri","cache","credentials","request","operation","setContext","fetchOptions","authLink","_","headers","token","accessToken","authorization","client","link","concat","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAO,sCAAP;AACA,SAASC,eAAT,QAAgC,cAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,SAASC,UAAT,QAA2B,cAA3B,C,CACA;AACA;;AACA,SAASC,UAAT,QAA2B,QAA3B,C,CAEA;;AACA,SACEC,YADF,EAEEC,aAFF,EAGEC,cAHF,QAIO,gBAJP;AAMA,MAAM,CAACC,OAAD,IAAYL,UAAU,CAAC,CAAC,aAAD,CAAD,CAA5B,C,CACA;;AACA,MAAMM,QAAQ,GAAGC,cAAc,CAAC;AAC9BC,EAAAA,GAAG,EAAE,+BADyB;AAE9BC,EAAAA,KAAK,EAAE,IAAIN,aAAJ,EAFuB;AAG9BO,EAAAA,WAAW,EAAG,SAHgB;AAI9BC,EAAAA,OAAO,EAAG,MAAMC,SAAN,IAAmB;AAC3BA,IAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,MAAAA,YAAY,EAAE;AACZJ,QAAAA,WAAW,EAAE;AADD;AADK,KAArB;AAKD;AAV6B,CAAD,CAA/B;AAaA,MAAMK,QAAQ,GAAGF,UAAU,CAAC,CAACG,CAAD,EAAI;AAAEC,EAAAA;AAAF,CAAJ,KAAoB;AAC9C;AACA,MAAGZ,OAAO,IAAI,IAAX,IAAmBA,OAAO,IAAI,EAAjC,EAAoC;AAClC,UAAMa,KAAK,GAAGb,OAAO,CAACc,WAAtB,CADkC,CAElC;;AACA,WAAO;AACLF,MAAAA,OAAO,EAAE,EACP,GAAGA,OADI;AAEPG,QAAAA,aAAa,EAAEF,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB;AAFpC;AADJ,KAAP;AAMD;AAEF,CAb0B,CAA3B;AAgBA,MAAMG,MAAM,GAAG,IAAInB,YAAJ,CAAiB;AAC9BoB,EAAAA,IAAI,EAAGP,QAAQ,CAACQ,MAAT,CAAgBjB,QAAhB,CADuB;AAE9BG,EAAAA,KAAK,EAAE,IAAIN,aAAJ;AAFuB,CAAjB,CAAf,C,CAIA;;AAEAP,QAAQ,CAAC4B,MAAT,eACE,QAAC,cAAD;AAAgB,EAAA,MAAM,EAAIH,MAA1B;AAAA,yBAEE,QAAC,KAAD,CAAO,UAAP;AAAA,2BACI,QAAC,eAAD;AAAA,6BACA,QAAC,UAAD;AAAA,+BACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,QADF,EAYEI,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAZF,E,CAeA;AACA;AACA;;AACA3B,eAAe","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { CookiesProvider } from 'react-cookie';\nimport reportWebVitals from './reportWebVitals';\n\nimport { useCookies } from 'react-cookie'\n//css schedule\n//\nimport { RecoilRoot } from 'recoil'\n\n//aphollo client\nimport { \n  ApolloClient, \n  InMemoryCache,\n  ApolloProvider\n} from '@apollo/client';\n\nconst [cookies] = useCookies(['accessToken']);\n//links\nconst httpLink = createHttpLink({\n  uri: 'http://localhost:4000/graphql',\n  cache: new InMemoryCache(),\n  credentials : 'include',\n  request : async operation => {\n    operation.setContext({\n      fetchOptions: {\n        credentials: 'same-origin'\n      }\n    })\n  }\n});\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  if(cookies != null || cookies != \"\"){\n    const token = cookies.accessToken;\n    // return the headers to the context so httpLink can read them\n    return {\n      headers: {\n        ...headers,\n        authorization: token ? `Bearer ${token}` : \"\",\n      }\n    }\n  }\n  \n});\n\n\nconst client = new ApolloClient({\n  link : authLink.concat(httpLink),\n  cache: new InMemoryCache()\n});\n///\n\nReactDOM.render(\n  <ApolloProvider client = {client}>\n    \n    <React.StrictMode>\n        <CookiesProvider>\n        <RecoilRoot>\n          <App />\n          </RecoilRoot>\n        </CookiesProvider>\n    </React.StrictMode>\n    \n  </ApolloProvider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}