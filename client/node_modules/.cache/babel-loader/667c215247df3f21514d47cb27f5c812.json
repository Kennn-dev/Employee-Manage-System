{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u0110\\u1ED3 \\xE1n chuy\\xEAn ngh\\xE0nh\\\\client\\\\src\\\\components\\\\nav\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport styled from 'styled-components';\nimport { useRecoilState, useRecoilValue } from 'recoil';\nimport { itemNavbar, clickSideBar } from '../../states/navbarState';\nimport { TextBlack } from '../text/index';\nimport { CustomInput } from '../login/index';\nconst NavBarStyled = styled.nav`\n    display : flex;\n    align-items : center;\n    width : 100%;\n    padding : 20px;\n    position : fixed ;\n    top : 0;\n    left : 0;\n    background : #ffff;\n    z-index : 3;\n`;\n_c = NavBarStyled;\nconst NavBarItemsStyled = styled.a`\n    display : inline-flex;\n    text-decoration : none !important;\n    margin : 0 20px;\n    padding : 10px 20px;\n    color : #242424;\n    border-radius : 15px;\n    cursor : pointer;\n    background-color : ${props => props.active ? \"#fcfcfc\" : \"#fffff\"};\n    transition-duration : 0.3s;\n    &:hover{\n        color : #242424;\n        background-color : #fcfcfc;\n        box-shadow: 0px 14px 28px rgba(0, 0, 0, 0.15);\n    };\n\n    &:focus {\n      color: #242424;\n    }\n`;\nexport const NavBar = () => {\n  _s();\n\n  //funcs\n  const [currentStateBar, setCurrentStateBar] = useRecoilState(clickSideBar);\n  const navBarState = useRecoilValue(itemNavbar); // const filterNav = navBarState.filter(item => item.id == currentStateBar.navBar)\n  // console.log(filterNav)\n\n  for (let i of navBarState) {\n    if (i.id === currentStateBar) console.log(i);\n  } // console.log(`currenState : ${currentStateBar.sideBar} +${currentStateBar.navBar} `)\n  // console.log(`curren NavBarState : ${navBarState[1].id}`)\n  // const array = filterNav.items\n\n\n  const handleClick = index => {\n    let newVal = { ...currentStateBar,\n      navBar: index\n    };\n    setCurrentStateBar(newVal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(NavBarStyled, {\n      children: [/*#__PURE__*/_jsxDEV(TextBlack, {\n        fontSize: \"20px\",\n        fontWeight: \"500\",\n        children: \"Coffee System\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n        style: {\n          marginLeft: \"30px\"\n        },\n        name: \"Search\",\n        width: \"300px\",\n        height: \"35px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(NavBar, \"q9DNdP4jY84SE0c8N0AHCD5WdjA=\", false, function () {\n  return [useRecoilState, useRecoilValue];\n});\n\n_c2 = NavBar;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"NavBarStyled\");\n$RefreshReg$(_c2, \"NavBar\");","map":{"version":3,"sources":["D:/Đồ án chuyên nghành/client/src/components/nav/index.jsx"],"names":["styled","useRecoilState","useRecoilValue","itemNavbar","clickSideBar","TextBlack","CustomInput","NavBarStyled","nav","NavBarItemsStyled","a","props","active","NavBar","currentStateBar","setCurrentStateBar","navBarState","i","id","console","log","handleClick","index","newVal","navBar","marginLeft"],"mappings":";;;;;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AAEA,SAASC,cAAT,EAAyBC,cAAzB,QAA8C,QAA9C;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,0BAAvC;AAEA,SAAQC,SAAR,QAAwB,eAAxB;AACA,SAAQC,WAAR,QAA0B,gBAA1B;AAGA,MAAMC,YAAY,GAAGP,MAAM,CAACQ,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;KAAMD,Y;AAWN,MAAME,iBAAiB,GAAGT,MAAM,CAACU,CAAE;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyBC,KAAK,IAAIA,KAAK,CAACC,MAAN,GAAe,SAAf,GAA2B,QAAS;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAuBA,OAAO,MAAMC,MAAM,GAAE,MAAK;AAAA;;AACtB;AACA,QAAM,CAACC,eAAD,EAAmBC,kBAAnB,IAAyCd,cAAc,CAACG,YAAD,CAA7D;AACA,QAAMY,WAAW,GAAGd,cAAc,CAACC,UAAD,CAAlC,CAHsB,CAItB;AACA;;AACA,OAAM,IAAIc,CAAV,IAAeD,WAAf,EAA2B;AACvB,QAAGC,CAAC,CAACC,EAAF,KAASJ,eAAZ,EACIK,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACP,GATqB,CAUtB;AACA;AAEA;;;AACA,QAAMI,WAAW,GAAIC,KAAD,IAAW;AAC3B,QAAIC,MAAM,GAAG,EACT,GAAGT,eADM;AAETU,MAAAA,MAAM,EAAGF;AAFA,KAAb;AAIAP,IAAAA,kBAAkB,CAACQ,MAAD,CAAlB;AACH,GAND;;AAQA,sBACI;AAAA,2BACA,QAAC,YAAD;AAAA,8BACI,QAAC,SAAD;AAAW,QAAA,QAAQ,EAAE,MAArB;AAA4B,QAAA,UAAU,EAAE,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAII,QAAC,WAAD;AACI,QAAA,KAAK,EAAI;AAACE,UAAAA,UAAU,EAAG;AAAd,SADb;AAEI,QAAA,IAAI,EAAG,QAFX;AAGI,QAAA,KAAK,EAAG,OAHZ;AAII,QAAA,MAAM,EAAG;AAJb;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA0BH,CAhDM;;GAAMZ,M;UAEsCZ,c,EAC3BC,c;;;MAHXW,M","sourcesContent":["import styled from 'styled-components';\r\n\r\nimport { useRecoilState, useRecoilValue} from 'recoil'\r\nimport {itemNavbar, clickSideBar} from '../../states/navbarState'\r\n\r\nimport {TextBlack} from '../text/index'\r\nimport {CustomInput} from '../login/index'\r\n\r\n\r\nconst NavBarStyled = styled.nav`\r\n    display : flex;\r\n    align-items : center;\r\n    width : 100%;\r\n    padding : 20px;\r\n    position : fixed ;\r\n    top : 0;\r\n    left : 0;\r\n    background : #ffff;\r\n    z-index : 3;\r\n`\r\nconst NavBarItemsStyled = styled.a`\r\n    display : inline-flex;\r\n    text-decoration : none !important;\r\n    margin : 0 20px;\r\n    padding : 10px 20px;\r\n    color : #242424;\r\n    border-radius : 15px;\r\n    cursor : pointer;\r\n    background-color : ${props => props.active ? \"#fcfcfc\" : \"#fffff\"};\r\n    transition-duration : 0.3s;\r\n    &:hover{\r\n        color : #242424;\r\n        background-color : #fcfcfc;\r\n        box-shadow: 0px 14px 28px rgba(0, 0, 0, 0.15);\r\n    };\r\n\r\n    &:focus {\r\n      color: #242424;\r\n    }\r\n`\r\n\r\n\r\n\r\nexport const NavBar= () =>{\r\n    //funcs\r\n    const [currentStateBar , setCurrentStateBar] = useRecoilState(clickSideBar)\r\n    const navBarState = useRecoilValue(itemNavbar)\r\n    // const filterNav = navBarState.filter(item => item.id == currentStateBar.navBar)\r\n    // console.log(filterNav)\r\n    for ( let i of navBarState){\r\n        if(i.id === currentStateBar)\r\n            console.log(i)\r\n    }\r\n    // console.log(`currenState : ${currentStateBar.sideBar} +${currentStateBar.navBar} `)\r\n    // console.log(`curren NavBarState : ${navBarState[1].id}`)\r\n    \r\n    // const array = filterNav.items\r\n    const handleClick = (index) => {\r\n        let newVal = {\r\n            ...currentStateBar,\r\n            navBar : index\r\n        }\r\n        setCurrentStateBar(newVal)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        <NavBarStyled>\r\n            <TextBlack fontSize =\"20px\" fontWeight =\"500\">\r\n                Coffee System\r\n            </TextBlack>\r\n            <CustomInput\r\n                style = {{marginLeft : \"30px\"}}\r\n                name = \"Search\"\r\n                width = \"300px\"\r\n                height = \"35px\"\r\n            />\r\n            {/* {\r\n                filterNav.map((item) => \r\n                <NavBarItemsStyled \r\n                    onClick = {()=> handleClick(index)}\r\n                    active={currentStateBar == index ? true : false} \r\n                    href={item.href}\r\n                >\r\n                {item.name}\r\n                </NavBarItemsStyled>)\r\n            } */}\r\n            \r\n        </NavBarStyled>\r\n        </>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}