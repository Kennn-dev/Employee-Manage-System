{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\\\u0110\\u1ED3 \\xE1n chuy\\xEAn ngh\\xE0nh\\\\client\\\\src\\\\pages\\\\dashboard\\\\Employee.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Rodal from 'rodal';\nimport 'rodal/lib/rodal.css';\nimport Select from 'react-select';\nimport styled from 'styled-components';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { useForm, Controller } from \"react-hook-form\";\nimport { FormLogin, ContainerMiddle, TitleH1, InputItems, CustomInput } from '../../components/login/index';\nimport { TextBlack, TextLight, TextError } from \"../../components/text\";\nimport { PrimaryButton } from \"../../components/buttons/index\";\nimport { Table } from 'reactstrap';\nimport ReactLoading from 'react-loading';\nimport { toast } from 'react-toastify';\nimport { BsPlus } from 'react-icons/bs';\nimport { CommonCard } from '../../components/cards/CommonCard';\nimport { CommonButtonBlack } from '../../components/buttons/index'; //gql\n\nimport { GET_ALL_EMPLOYEES } from '../../graphql/query/index';\nimport { CREATE_NEW_EMPLOYEE } from '../../graphql/mutation/index';\nexport default function Employee() {\n  _s();\n\n  const [on, setOn] = useState(false);\n  const {\n    register,\n    handleSubmit,\n    errors,\n    control\n  } = useForm();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_ALL_EMPLOYEES);\n  const [createEmp] = useMutation(CREATE_NEW_EMPLOYEE);\n  const opionsPos = [{\n    value: 'Bartender',\n    label: 'Bartender'\n  }, {\n    value: 'Cashier',\n    label: 'Cashier'\n  }, {\n    value: 'Dishwasher',\n    label: 'Dishwasher'\n  }];\n\n  if (error) {\n    toast(`⛔ ${error.message}`);\n  }\n\n  const onSubmit = newEmp => {\n    try {\n      // {address: \"69/1/12 nguyễn gia trí p25\"\n      // email: \"dinhtran1983py@gmail.com\"\n      // name: \"trần thế dinh\"\n      // password: \"12313\"\n      // phone: \"0903396661\"\n      // position: {value: \"Bartender\", label: \"Bartender\"}\n      // username: \"123123\"}\n      createEmp({\n        variables: {\n          username: newEmp.username,\n          password: newEmp.password,\n          email: newEmp.email,\n          name: newEmp.name,\n          phone: newEmp.phone,\n          position: newEmp.position.value,\n          address: newEmp.address\n        }\n      });\n      console.log(dataSubmit); // if(data) {\n      // }\n    } catch (err) {\n      toast(`⛔ ${err.message}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflowX: \"scroll\",\n      padding: \"10px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Rodal, {\n      visible: on,\n      onClose: () => setOn(false),\n      showCloseButton: true,\n      children: /*#__PURE__*/_jsxDEV(FormMaxWidthHeight, {\n        onSubmit: handleSubmit(onSubmit),\n        children: /*#__PURE__*/_jsxDEV(ContainerMiddle, {\n          style: {\n            overflow: \"scroll\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TitleH1, {\n            children: \"New Employee \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputItems, {\n            children: [/*#__PURE__*/_jsxDEV(TextBlack, {\n              fontWeight: \"500\",\n              fontSize: \"16px\",\n              children: \"Username\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              name: \"username\",\n              height: \"40px\",\n              placeholder: \"Username ...\",\n              ref: register({\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 25\n            }, this), errors.username && /*#__PURE__*/_jsxDEV(TextError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputItems, {\n            children: [/*#__PURE__*/_jsxDEV(TextBlack, {\n              fontWeight: \"500\",\n              fontSize: \"16px\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              name: \"password\",\n              type: \"password\",\n              height: \"40px\",\n              placeholder: \"Password ...\",\n              ref: register({\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), errors.password && /*#__PURE__*/_jsxDEV(TextError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputItems, {\n            children: [/*#__PURE__*/_jsxDEV(TextBlack, {\n              fontWeight: \"500\",\n              fontSize: \"16px\",\n              children: \"Full Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              name: \"name\",\n              height: \"40px\",\n              placeholder: \"Full name ...\",\n              ref: register({\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 25\n            }, this), errors.name && /*#__PURE__*/_jsxDEV(TextError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputItems, {\n            children: [/*#__PURE__*/_jsxDEV(TextBlack, {\n              fontWeight: \"500\",\n              fontSize: \"16px\",\n              children: \"Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              name: \"phone\",\n              height: \"40px\",\n              placeholder: \"Phone ...\",\n              ref: register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputItems, {\n            children: [/*#__PURE__*/_jsxDEV(TextBlack, {\n              fontWeight: \"500\",\n              fontSize: \"16px\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              name: \"email\",\n              type: \"email\",\n              height: \"40px\",\n              placeholder: \"Email ...\",\n              ref: register({\n                required: true\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 25\n            }, this), errors.email && /*#__PURE__*/_jsxDEV(TextError, {\n              children: \"This field is required\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputItems, {\n            children: [/*#__PURE__*/_jsxDEV(TextBlack, {\n              fontWeight: \"500\",\n              fontSize: \"16px\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(CustomInput, {\n              name: \"address\",\n              height: \"40px\",\n              placeholder: \"Address ...\",\n              ref: register\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n            children: [/*#__PURE__*/_jsxDEV(TextBlack, {\n              style: {\n                margin: \"10px 0\"\n              },\n              fontWeight: \"500\",\n              fontSize: \"16px\",\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Controller, {\n              as: Select,\n              options: opionsPos,\n              name: \"position\",\n              isClearable: true,\n              control: control\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(InputItems, {\n            children: /*#__PURE__*/_jsxDEV(PrimaryButton, {\n              type: \"submit\",\n              children: /*#__PURE__*/_jsxDEV(TextLight, {\n                fontWeight: \"500\",\n                fontSize: \"14px\",\n                children: \"Create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommonCard, {\n      width: \"100%\",\n      children: loading ? /*#__PURE__*/_jsxDEV(ReactLoading, {\n        type: \"bars\",\n        color: \"#242424\",\n        height: 50,\n        width: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 24\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CommonButtonBlack, {\n          width: \"100px\",\n          height: \"40px\",\n          onClick: () => setOn(!on),\n          children: [/*#__PURE__*/_jsxDEV(BsPlus, {\n            size: \"24\",\n            color: \"#f8f8f8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 21\n          }, this), \"Add\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          hover: true,\n          responsive: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"#\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Position\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 21\n          }, this), data.getAllEmployees.map((i, index) => /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                scope: \"row\",\n                children: index + 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: i.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: i.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: i.position\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Employee, \"zJbX9BndG4RP5FfvfwVJE1dCFUs=\", false, function () {\n  return [useForm, useQuery, useMutation];\n});\n\n_c = Employee;\nconst FormMaxWidthHeight = styled(FormLogin)`\n    width : 100%;\n    height : 100%;\n    overflow-x : scroll;\n`;\n_c2 = FormMaxWidthHeight;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Employee\");\n$RefreshReg$(_c2, \"FormMaxWidthHeight\");","map":{"version":3,"sources":["D:/Đồ án chuyên nghành/client/src/pages/dashboard/Employee.jsx"],"names":["React","useEffect","useState","Rodal","Select","styled","useQuery","useMutation","useForm","Controller","FormLogin","ContainerMiddle","TitleH1","InputItems","CustomInput","TextBlack","TextLight","TextError","PrimaryButton","Table","ReactLoading","toast","BsPlus","CommonCard","CommonButtonBlack","GET_ALL_EMPLOYEES","CREATE_NEW_EMPLOYEE","Employee","on","setOn","register","handleSubmit","errors","control","loading","error","data","createEmp","opionsPos","value","label","message","onSubmit","newEmp","variables","username","password","email","name","phone","position","address","console","log","dataSubmit","err","overflowX","padding","overflow","required","margin","getAllEmployees","map","i","index","FormMaxWidthHeight"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport Rodal from 'rodal';\r\nimport 'rodal/lib/rodal.css';\r\nimport Select from 'react-select'\r\nimport styled from 'styled-components'\r\n\r\nimport { useQuery , useMutation } from '@apollo/client';\r\nimport { useForm , Controller } from \"react-hook-form\";\r\n\r\nimport {\r\n    FormLogin,\r\n    ContainerMiddle,\r\n    TitleH1,\r\n    InputItems,\r\n    CustomInput\r\n} from '../../components/login/index'\r\nimport { \r\n    TextBlack,\r\n    TextLight,\r\n    TextError\r\n } from \"../../components/text\";\r\n import { \r\n    PrimaryButton\r\n } from \"../../components/buttons/index\";\r\nimport { Table } from 'reactstrap';\r\nimport ReactLoading from 'react-loading';\r\nimport { toast } from 'react-toastify';\r\nimport {BsPlus} from 'react-icons/bs'\r\nimport {CommonCard} from '../../components/cards/CommonCard'\r\nimport {CommonButtonBlack} from '../../components/buttons/index'\r\n\r\n//gql\r\nimport {\r\n    GET_ALL_EMPLOYEES,\r\n} from '../../graphql/query/index'\r\nimport {\r\n    CREATE_NEW_EMPLOYEE\r\n} from '../../graphql/mutation/index'\r\n\r\nexport default function Employee() {\r\n    const [on , setOn] = useState(false)\r\n    const { register, handleSubmit, errors , control} = useForm();\r\n    const { loading, error, data } = useQuery(GET_ALL_EMPLOYEES);\r\n    const [createEmp] = useMutation(CREATE_NEW_EMPLOYEE);\r\n\r\n    const opionsPos = [\r\n        {value : 'Bartender', label : 'Bartender'},\r\n        {value : 'Cashier', label : 'Cashier'},\r\n        {value : 'Dishwasher', label : 'Dishwasher'}\r\n    ]\r\n\r\n    if (error){\r\n        toast(`⛔ ${error.message}`);\r\n    }\r\n\r\n    const onSubmit = (newEmp) => {\r\n        try{\r\n            // {address: \"69/1/12 nguyễn gia trí p25\"\r\n            // email: \"dinhtran1983py@gmail.com\"\r\n            // name: \"trần thế dinh\"\r\n            // password: \"12313\"\r\n            // phone: \"0903396661\"\r\n            // position: {value: \"Bartender\", label: \"Bartender\"}\r\n            // username: \"123123\"}\r\n            createEmp({\r\n                variables : {\r\n                    username : newEmp.username,\r\n                    password : newEmp.password,\r\n                    email : newEmp.email,\r\n                    name : newEmp.name,\r\n                    phone : newEmp.phone,\r\n                    position : newEmp.position.value,\r\n                    address : newEmp.address\r\n                }\r\n            })\r\n            console.log(dataSubmit);\r\n   \r\n            // if(data) {\r\n                \r\n            // }\r\n        }catch(err){\r\n            toast(`⛔ ${err.message}`);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div style={{overflowX : \"scroll\" , padding : \"10px\"}}>\r\n            <Rodal visible={on} onClose={() => setOn(false)} showCloseButton={true}>\r\n            <FormMaxWidthHeight onSubmit={handleSubmit(onSubmit)} >\r\n                <ContainerMiddle style={{overflow : \"scroll\"}}>\r\n                    <TitleH1 >New Employee </TitleH1>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Username</TextBlack>\r\n                        <CustomInput  name=\"username\" height = \"40px\" placeholder=\"Username ...\" ref={register({ required: true })} />\r\n                        {errors.username && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Password</TextBlack>\r\n                        <CustomInput  name=\"password\" type=\"password\"  height = \"40px\" placeholder=\"Password ...\" ref={register({ required: true })} />\r\n                        {errors.password && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Full Name</TextBlack>\r\n                        <CustomInput  name=\"name\" height = \"40px\" placeholder=\"Full name ...\" ref={register({ required: true })} />\r\n                        {errors.name && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Phone</TextBlack>\r\n                        <CustomInput  name=\"phone\"   height = \"40px\" placeholder=\"Phone ...\" ref={register}/>\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Email</TextBlack>\r\n                        <CustomInput  name=\"email\" type=\"email\"  height = \"40px\" placeholder=\"Email ...\" ref={register({ required: true })} />\r\n                        {errors.email && <TextError>This field is required</TextError>}\r\n                    </InputItems>\r\n                    <InputItems>\r\n                        <TextBlack fontWeight =\"500\" fontSize = \"16px\">Address</TextBlack>\r\n                        <CustomInput  name=\"address\" height = \"40px\" placeholder=\"Address ...\" ref={register}/>\r\n                    </InputItems>\r\n                    <section>\r\n                        <TextBlack style={{margin : \"10px 0\"}} fontWeight =\"500\" fontSize = \"16px\">Position</TextBlack>\r\n                        <Controller\r\n                            as={Select}\r\n                            options={opionsPos}\r\n                            name=\"position\"\r\n                            isClearable\r\n                            control={control}\r\n                        />\r\n                    </section>\r\n                    <InputItems>\r\n                        <PrimaryButton type=\"submit\"> \r\n                            <TextLight fontWeight = \"500\" fontSize=\"14px\">Create</TextLight> \r\n                        </PrimaryButton>\r\n                    </InputItems>\r\n                </ContainerMiddle>\r\n            </FormMaxWidthHeight>\r\n            </Rodal>\r\n            <CommonCard width={\"100%\"}>\r\n            {loading ? <ReactLoading type={\"bars\"} color={\"#242424\"} height={50} width={50} /> : \r\n                <>\r\n                <CommonButtonBlack\r\n                    width=\"100px\"\r\n                    height =\"40px\"\r\n                    onClick={() => setOn(!on)}\r\n                >\r\n                    <BsPlus size=\"24\" color=\"#f8f8f8\"/>\r\n                    Add\r\n                </CommonButtonBlack>\r\n                <Table hover responsive>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Email</th>\r\n                        <th>Position</th>\r\n                        </tr>\r\n                    </thead>\r\n                    {\r\n                        data.getAllEmployees.map((i ,index) => \r\n                        <tbody>\r\n                            <tr>\r\n                            <th scope=\"row\">{index+1}</th>\r\n                            <td>{i.name}</td>\r\n                            <td>{i.email}</td>\r\n                            <td>{i.position}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                        )\r\n                    }\r\n                </Table>\r\n                </>\r\n            }\r\n            \r\n            </CommonCard>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst FormMaxWidthHeight = styled(FormLogin)`\r\n    width : 100%;\r\n    height : 100%;\r\n    overflow-x : scroll;\r\n`"]},"metadata":{},"sourceType":"module"}